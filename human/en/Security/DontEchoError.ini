name = "Don't Echo Error";
description = "It is recommended to avoid displaying error messages directly to the browser.

PHP's uses the ``display_errors`` directive to control display of errors to the browser. This must be kept to ``off`` when in production.
Error messages should be logged, but not displayed.";
code = "<?php

// Inside a 'or' test
mysql_connect('localhost', $user, $pass) or die(mysql_error());

// Inside a if test
$result = pg_query( $db, $query );
if( !$result )
{
	echo Erreur SQL: . pg_error();
	exit;
}

// Changing PHP configuration
ini_set('display_errors', 1);
// This is also a security error : 'false' means actually true.
ini_set('display_errors', 'false');

?>";
clearphp = "";
severity = "S_CRITICAL";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_INSTANT";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.7";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Remove any echo, print, printf() call built with error messages from an exception, or external source.";
; Alternative to make this code go away. 
; One by possible solution

features[] = "";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Error reporting <https://php.earth/docs/security/intro#error-reporting>`_";
seeAlso[] = "`List of php.ini directives <https://www.php.net/manual/en/ini.list.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "ChurchCRM";
file = "wp-admin/includes/misc.php";
line = "74";
code = "    if (mysqli_error($cnInfoCentral) != '') {
        echo gettext('An error occured: ').mysqli_errno($cnInfoCentral).'--'.mysqli_error($cnInfoCentral);
    } else {
";
explain = "This is classic debugging code that should never reach production. mysqli_error() and mysqli_errno() provide valuable information is case of an error, and may be exploited by intruders.";

[example2]
project = "Phpdocumentor";
file = "src/phpDocumentor/Plugin/Graphs/Writer/Graph.php";
line = "77";
code = "    public function processClass(ProjectDescriptor $project, Transformation $transformation)
    {
        try {
            $this->checkIfGraphVizIsInstalled();
        } catch (\Exception $e) {
            echo $e->getMessage();

            return;
        }
";
explain = "Default development behavior : display the caught exception. Production behavior should not display that message, but log it for later review. Also, the return in the catch should be moved to the main code sequence.";
