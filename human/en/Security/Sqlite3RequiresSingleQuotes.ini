name = "Sqlite3 Requires Single Quotes";
description = "The escapeString() method from ``SQLite3`` doesn't escape ``\"``, but only ``'``. 
To properly handle quotes and ``NUL`` characters, use bindParam() instead.

Quote from the PHP manual comments : ``The reason this function doesn't escape double quotes is because double quotes are used with names (the equivalent of backticks in MySQL), as in table or column names, while single quotes are used for values.``";
code = "<?php

// OK. escapeString is OK with '
$query = \"SELECT * FROM table WHERE col = '\".$sqlite->escapeString($x).\"'\";

// This is vulnerable to \" in $x
$query = 'SELECT * FROM table WHERE col = \"'.$sqlite->escapeString($x).'\"';

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.0.10";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Use prepared statements whenever possible";
modifications[] = "Switch the query to use single quote";
; Alternative to make this code go away. 
; One by possible solution

features[] = "sqlite3";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`SQLite3::escapeString <https://www.php.net/manual/en/sqlite3.escapestring.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

