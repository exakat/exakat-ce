name = "Register Globals";
description = "``register_globals`` was a PHP directive that dumped all incoming variables from GET, POST, COOKIE and FILES as global variables in the called scripts.
This lead to security failures, as the variables were often used but not filtered. 

Though it is less often found in more recent code, ``register_globals`` is sometimes needed in legacy code, that haven't made the move to eradicate this style of coding.
Backward compatible pieces of code that mimic the ``register_globals`` features usually create even greater security risks by being run after scripts startup. At that point, some important variables are already set, and may be overwritten by the incoming call, creating confusion in the script.

Mimicking ``register_globals`` is achieved with variables variables, extract(), parse_str() and import_request_variables() (Up to PHP 5.4). 

<?php

// Security warning ! This overwrites existing variables. 
extract($_POST);

// Security warning ! This overwrites existing variables. 
foreach($_REQUEST as $var => $value) {
    $$var = $value;
}

?>

";
clearphp = "";
severity = "S_CRITICAL";
timetofix = "T_SLOW";
exakatSince = "0.8.4";
precision = "P_HIGH"

features[] = "register-globals"

seeAlso[] = ""

phpErrors[] = ""

phpVersion = ""

modifications[] = "Avoid reimplementing register_globals"
modifications[] = "Use a container to store and access commonly used values"

[example1]
project=TeamPass
file=api/index.php
line=25
code="teampass_whitelist();

parse_str($_SERVER['QUERY_STRING']);
$method = $_SERVER['REQUEST_METHOD'];
$request = explode(\"/\", substr(@$_SERVER['PATH_INFO'], 1));
";
explain="The API starts with security features, such as the whitelist(). The whitelist applies to IP addresses, so the query string is not sanitized. Then, the QUERY_STRING is parsed, and creates a lot of new global variables."

[example2]
project=XOOPS
file=htdocs/modules/system/admin/images/main.php:33
line=33
code="// Check users rights
if (!is_object(\$xoopsUser) || !is_object(\$xoopsModule) || !$xoopsUser->isAdmin(\$xoopsModule->mid())) {
    exit(_NOPERM);
}

//  Check is active
if (!xoops_getModuleOption('active_images', 'system')) {
    redirect_header('admin.php', 2, _AM_SYSTEM_NOTACTIVE);
}

if (isset($_POST)) {
    foreach (\$_POST as \$k => \$v) {
        \${\$k} = \$v;
    }
}

// Get Action type
\$op = system_CleanVars(\$_REQUEST, 'op', 'list', 'string');
";
explain="This code only exports the POST variables as globals. And it does clean incoming variables, but not all of them. "

