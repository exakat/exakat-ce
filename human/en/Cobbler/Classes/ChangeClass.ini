name = "Change Class";
description = "This cobbler replaces a class by another one, and leave the original class intact.

This cobbler is useful for inserting new classes instead of native PHP or library related ones: the usage shall be changed, but not the definition. 

It might also be useful to update code, but keep older classes available for backward compatibility or fallback strategies.
";

dependsOn[] = "";
exakatSince = "2.3.0";

beforeCode = "<?php

class oldClass {}

$a = new oldClass;

?>";
afterCode = "<?php

class oldClass {}

$a = new newClass;

?>";

;related PHP features
features[] = "renaming"

;List of possible opposite cobbler (there might be several)
reverseCobbler[] = "Classes/ChangeClass"

;List of possible related analysis
suggestedAnalysis[] = ""

;similar cobbler; alternative cobbler.
relatedCobbler[] = "Classes/RenameClass"

;Is the cobbler idempotent (run once only)
idempotent=1

;PHP versions where this is applicable
phpVersion = ""

; keywords for documentation
keywords[] = ""

parameters['origin'] = "oldClass";
parameters['destination'] = "newClass";
parameters['destinationName'] = "newClass";

[parameter1]
name="origin";
default="";
type="name";
description="The full namespace path name of the class to target.";

[parameter2]
name="newClass";
default="";
type="name";
description="The full namespace path name of the class to use.";

[parameter3]
name="destinationName";
default="";
type="name";
description="The name of the class to use. This may be used as an import alias";
