name = "Rename Class";
description = "Rename a class into another one. 

The rename applies the new name to the class, and its usage : static calls, types, extends and instanceof. ";

dependsOn[] = "";
exakatSince = "2.3.0";

beforeCode = "<?php
class x {
	function m() {}
}

(new x)->m();

?>";
afterCode = "<?php
class x {
	function newM() {}
}

(new x)->newM();

?>";

;related PHP features
features[] = "class"
features[] = "name"
features[] = "method"

;List of possible opposite cobbler (there might be several)
reverseCobbler[] = "Classes/RenameMethod";

;List of possible related analysis
suggestedAnalysis[] = ""

;similar cobbler; alternative cobbler.
relatedCobbler[] = ""

;Is the cobbler idempotent (run once only)
idempotent=1

;PHP versions where this is applicable
phpVersion = ""

; keywords for documentation
keywords[] = ""

[parameter1]
name="origin";
default="";
type="string";
description="The method to rename, along with its parent class. Like theClass::Method";

[parameter2]
name="destination";
default="";
type="string";
description="The destination's method name. Only the name.";
