name = "Rename Property";
description = "Rename a property into another one. 

The rename applies the new name to the property, and its usage : static calls, and normal calls.";

dependsOn[] = "";
exakatSince = "2.3.0";

beforeCode = "<?php
class x {
	private $p = 1;
	
	function m() {
		$this->p = 2;
	}
}

?>";
afterCode = "<?php
class x {
	private $newP = 1;
	
	function m() {
		$this->newP = 2;
	}
}

?>";

;related PHP features
features[] = "class"
features[] = "name"
features[] = "method"

;List of possible opposite cobbler (there might be several)
reverseCobbler[] = ""

;List of possible related analysis
suggestedAnalysis[] = ""

;similar cobbler; alternative cobbler.
relatedCobbler[] = ""

;Is the cobbler idempotent (run once only)
idempotent=1

;PHP versions where this is applicable
phpVersion = ""

; keywords for documentation
keywords[] = ""

[parameter1]
name="origin";
default="";
type="string";
description="The property to rename, along with its parent class. Like theClass::$property";

[parameter2]
name="destination";
default="";
type="string";
description="The destination's property name. Only the name.";
