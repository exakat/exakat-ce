name = "Overload Existing Names";
description = "Imported alias have precedence over existing ones, and as such, may replace existing features with unexpected ones. 

This example shows how to replace strtolower() with strtoupper() while keeping the main code intact. This might be very confusing code. 

<?php

// Replacing a PHP classic with another one
use function strtoupper as strtolower;

echo strtolower('pHp'); 
// displays PHP

?>

This behavior is important for backward compatibility, and also to avoid naming conflicts when the coding has been done with a PHP installation which do not have some specific declaration. For example, a source may define an 'Event' class, which will be in conflict when the ext/event library is installed. 

This feature is also useful to mock some native PHP structures, during tests. 

This rule relies on the PDFF configuration to check for external existing structures. 

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "use-alias";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use another local name than the general name"
modifications[] = "Always code in a namespace to avoid conflict"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

isPHP = 1
isExt = 1
isStubs = 1
