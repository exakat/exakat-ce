name = "Hidden Use Expression";
description = "The use expression for namespaces should always be at the beginning of the namespace block. 

It is where everyone expect them, and it is less confusing than having them at various levels.

<?php

// This is visible 
use A;

class B {}

// This is hidden 
use C as D;

class E extends D {
    use traitT; // This is a use for a trait

    function foo() {
        // This is a use for a closure
        return function ($a) use ($b) {}
    }
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";

modifications[] = "Group all uses together, at the beginning of the namespace or class"

[example1]
project="Tikiwiki"
file="lib/core/Tiki/Command/DailyReportSendCommand.php"
line="17"
code="namespace Tiki\Command;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
error_reporting(E_ALL);
use TikiLib;
use Reports_Factory;
";
explain="Sneaky error_reporting, hidden among the use calls. "

[example2]
project="OpenEMR"
file="interface/patient_file/summary/browse.php"
line="23"
code="<?php
/**
 * Patient selector for insurance gui
 *
 * @package   OpenEMR
 * @link      http://www.open-emr.org
 * @author    Brady Miller <brady.g.miller@gmail.com>
 * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
 * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
 */


require_once("../../globals.php");
require_once("$srcdir/patient.inc");
require_once("$srcdir/options.inc.php");

if (!empty($_POST)) {
    if (!verifyCsrfToken($_POST["csrf_token_form"])) {
        csrfNotVerified();
    }
}

use OpenEMR\Core\Header;
";
explain="Use expression is only reached when the csrf token is checked. This probably save some CPU when no csrf is available, but it breaks the readability of the file."
