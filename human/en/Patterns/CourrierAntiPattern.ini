name = "Courier Anti-Pattern";
description = "The courier anti-pattern is the storage of a dependency by a class, in order to create an instance that requires this dependency.

The class itself doesn't actually need this dependency, but has a dependency to a class that requires it. 
The alternative here is to inject Foo instead of Bar.";
code = "<?php

// The foo class requires bar
class Foo {
    public function __construct(Bar $b) {
    }
}

// Class A doesn't depends on Bar, but depends on Foo
// Class A never uses Bar, but only uses Foo.
class A {
    private $courier;

    public function __construct(Bar $courier) {
        $this->courier = $courier;       
    }

    public function Afoo() {
        $b = new Foo($this->courier);
    }

}

?>";
clearphp = "";
severity = "S_NONE";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_NONE";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.11.6";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "pattern";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Courier Anti-pattern <https://r.je/oop-courier-anti-pattern.html>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

