name = "ext/crypto";
description = "Extension ext/crypto (PECL).

Objective PHP binding of OpenSSL Crypto library.";
code = "<?php
use Crypto\Cipher;
use Crypto\AlgorihtmException;
$algorithm = 'aes-256-cbc';
if (!Cipher::hasAlgorithm($algorithm)) {
	die('Algorithm $algorithm not found' . PHP_EOL);
}
try {
	$cipher = new Cipher($algorithm);
	// Algorithm method for retrieving algorithm
	echo 'Algorithm: ' . $cipher->getAlgorithmName() . PHP_EOL;
	// Params
	$key_len = $cipher->getKeyLength();
	$iv_len = $cipher->getIVLength();
	
	echo 'Key length: ' . $key_len . PHP_EOL;
	echo 'IV length: '  . $iv_len . PHP_EOL;
	echo 'Block size: ' . $cipher->getBlockSize() . PHP_EOL;
	// This is just for this example. You should never use such key and IV!
	$key = str_repeat('x', $key_len);
	$iv = str_repeat('i', $iv_len);
	// Test data
	$data1 = 'Test';
	$data2 = 'Data';
	$data = $data1 . $data2;
	// Simple encryption
	$sim_ct = $cipher->encrypt($data, $key, $iv);
	
	// init/update/finish encryption
	$cipher->encryptInit($key, $iv);
	$iuf_ct  = $cipher->encryptUpdate($data1);
	$iuf_ct .= $cipher->encryptUpdate($data2);
	$iuf_ct .= $cipher->encryptFinish();
	// Raw data output (used base64 format for printing)
	echo 'Ciphertext (sim): ' . base64_encode($sim_ct) . PHP_EOL;
	echo 'Ciphertext (iuf): ' . base64_encode($iuf_ct) . PHP_EOL;
	// $iuf_out == $sim_out
	$ct = $sim_ct;
	// Another way how to create a new cipher object (using the same algorithm and mode)
	$cipher = Cipher::aes(Cipher::MODE_CBC, 256);
	// Simple decryption
	$sim_text = $cipher->decrypt($ct, $key, $iv);
	
	// init/update/finish decryption
	$cipher->decryptInit($key, $iv);
	$iuf_text = $cipher->decryptUpdate($ct);
	$iuf_text .= $cipher->decryptFinish();
	// Raw data output ($iuf_out == $sim_out)
	echo 'Text (sim): ' . $sim_text . PHP_EOL;
	echo 'Text (iuf): ' . $iuf_text . PHP_EOL;
}
catch (AlgorithmException $e) {
	echo $e->getMessage() . PHP_EOL;
}

?>";
clearphp = "";
severity = "S_NONE";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_NONE";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`pecl crypto <https://pecl.php.net/package/crypto>`_";
seeAlso[] = "`php-crypto <https://github.com/bukka/php-crypto>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

