name = "ext/weakref";
description = "Weak References for PHP.

Weak references provide a non-intrusive gateway to ephemeral objects. Unlike normal (strong) references, weak references do not prevent the garbage collector from freeing that object. For this reason, an object may be destroyed even though a weak reference to that object still exists. In such conditions, the weak reference seamlessly becomes invalid.

<?php
class MyClass {
    public function __destruct() {
        echo ""Destroying object!\n"";
    }
}

$o1 = new MyClass;

$r1 = new WeakRef($o1);

if ($r1->valid()) {
    echo ""Object still exists!\n"";
    var_dump($r1->get());
} else {
    echo ""Object is dead!\n"";
}

unset($o1);

if ($r1->valid()) {
    echo ""Object still exists!\n"";
    var_dump($r1->get());
} else {
    echo ""Object is dead!\n"";
}
?>

See also `Weak references <https://www.php.net/manual/en/book.weakref.php>`_ and 
         `PECL extension that implements weak references and weak maps in PHP <https://github.com/colder/php-weakref>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.6.5";

; Alternative to make this code go away. 
; One by possible solution
;modifications[] = ""

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""
