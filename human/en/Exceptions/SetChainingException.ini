name = "Set Chaining Exception";
description = "Chaining exception allows rethrowing a caught exception with a new one. The previous exception is added to the new exception, for later reference.

For that, the constructor of the chaining exception must relay the previous one to the parent constructor.";
code = "<?php

//
class myChainingException{
	function __construct($message, $code = 0, \Throwable $exception = null) {
		// This exception can be chained
		parent::__construct($message, $code, $exception);
	}
}

// No chaining possible
class myException{
	function __construct($message) {
		// This exception can't chain anything
		parent::__construct($message);
	}
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.0";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Add the default values to allow chaining";
; Alternative to make this code go away. 
; One by possible solution

features[] = "chaining-exception";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "chain-exception";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

