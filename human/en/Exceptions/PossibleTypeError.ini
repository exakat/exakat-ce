name = "Possible TypeError";
description = "Report possible errors when a string is given to a int or float typed container. 

That error will be emitted when strict_types is active, or if the string cannot be formatted into a float or an int. Otherwise, the code works as intended.

<?php

// This is OK, as the string will be successfully turned into a float
foo("12.34");

// This is KO, as the string will not bet turned into a float
foo("12.34a");

function foo(float $price) {
	intdiv($price, 3);
}

?>

It is recommended to set a try/catch around those expressions, to catch them. 

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.0";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "`TypeError <https://www.php.net/manual/en/class.typeerror.php>`";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "TypeError";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Add the try expression around the assignation, to catch the error"
modifications[] = "Validate the incoming value to ensure it can be converted to the target type"
modifications[] = "Cast the value to int or float"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
; Duplicate and increment numbers to add more : parameter1, paramter2, etc. 
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";
