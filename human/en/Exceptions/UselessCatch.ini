name = "Useless Catch";
description = "Catch clause should handle the exception with some work. 

Among the task of a catch clause : log the exception, clean any mess that was introduced, fail graciously. 

<?php

function foo($a) {
    try {
        $b = doSomething($a);
    } catch (Throwable $e) {
        // No log of the exception : no one knows it happened.
        
        // return immediately ? 
        return false;
    }
    
    $b->complete();
    
    return $b;
}

?>

See also `Exceptions <https://www.php.net/manual/en/language.exceptions.php>`_ and 
         `Best practices for PHP exception handling <https://www.moxio.com/blog/34/best-practices-for-php-exception-handling>`_.
";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_SLOW";
exakatSince = "1.1.4";

modifications[] = "Add a log call to the catch block"
modifications[] = "Handle correctly the exception"
[example1]
project="Zurmo"
file="app/protected/modules/workflows/forms/attributes/ExplicitReadWriteModelPermissionsWorkflowActionAttributeForm.php"
line="99"
code="
                try
                {
                    $group = Group::getById((int)$this->type);
                    $explicitReadWriteModelPermissions->addReadWritePermitable($group);
                }
                catch (NotFoundException $e)
                {
                    //todo: handle exception better
                    return;
                }
";
explain="Catch the exception, then return. At least, the comment is honest."

[example2]
project="PrestaShop"
file="src/Core/Addon/Module/ModuleManagerBuilder.php"
line="170"
code="    private function __construct()
    {
    // More code......
            try {
                $filesystem = new Filesystem();
                $filesystem->dumpFile($phpConfigFile, '<?php return ' . var_export($config, true) . ';' . "\n");
            } catch (IOException $e) {
                return false;
            }
        }
";
explain="Here, the catch clause will intercept a IO problem while writing element on the disk, and will return false. Since this is a constructor, the returned value will be ignored and the object will be left in a wrong state, since it was not totally inited."
