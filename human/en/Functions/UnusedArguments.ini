name = "Unused Parameter";
description = "Those parameters are not used in the method or function. 

Unused parameters should be removed in functions : they are dead code.

Unused parameters also should be removed from methods, though there may have external reasons for them to stay. In particular, they might be defined in a parent class, or an interface, and cannot be removed.

<?php

// $unused is in the signature, but not used. 
function foo($unused, $b, $c) {
    return $b + $c;
}

interface i {
    function goo($a);
}

class a implements i {
    // goo signature comes from the interface
    function goo($a) {
        return 3;
    }
}
?>

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision = "P_VERY_HIGH"

modifications[] = "Drop the argument from the signature"
modifications[] = "Actually use that argument in the body of the method"

seeAlso[] = ""

phpErrors[] = ""

features[] = "parameter"

[example1]
project="ThinkPHP"
file="ThinkPHP/Library/Behavior/AgentCheckBehavior.class.php"
line="18"
code="class AgentCheckBehavior
{
    public function run(&$params)
    {
        // 代理访问检测
        $limitProxyVisit = C('LIMIT_PROXY_VISIT', null, true);
        if ($limitProxyVisit && ($_SERVER['HTTP_X_FORWARDED_FOR'] || $_SERVER['HTTP_VIA'] || $_SERVER['HTTP_PROXY_CONNECTION'] || $_SERVER['HTTP_USER_AGENT_VIA'])) {
            // 禁止代理访问
            exit('Access Denied');
        }
    }
}
";
explain="$params are requested, but never used. The method is not overloading another one, as the class doesn't extends anything. $params is unused. "
[example2]
project="phpMyAdmin"
file="libraries/classes/Display/Results.php"
line="1985"
code="    /**
     * Prepare parameters and html for sorted table header fields
     *
     * @param array    $sort_expression             sort expression
     * @param array    $sort_expression_nodirection sort expression without direction
     * @param string   $sort_tbl                    The name of the table to which
     *                                             the current column belongs to
     * @param string   $name_to_use_in_sort         The current column under
     *                                             consideration
     * @param array    $sort_direction              sort direction
     * @param stdClass $fields_meta                 set of field properties
     * @param integer  $column_index                The index number to current column
     *
     * @return  array   3 element array - $single_sort_order, $sort_order, $order_img
     *
     * @access  private
     *
     * @see     _getOrderLinkAndSortedHeaderHtml()
     */
    private function _getSingleAndMultiSortUrls(
        array $sort_expression,
        array $sort_expression_nodirection,
        $sort_tbl,
        $name_to_use_in_sort,
        array $sort_direction,
        $fields_meta,
        $column_index
    ) {
    /**/
        // find the sorted column index in row result
        // (this might be a multi-table query)
        $sorted_column_index = false;
    /**/
    }
";
explain="Although $column_index is documented, it is not found in the rest of the (long) body of the function. It might have been refactored into $sorted_column_index."
