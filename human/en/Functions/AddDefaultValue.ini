name = "Add Default Value";
description = "Parameter in methods definition may receive a default value. This allows the called method to set a value when the parameter is omitted. 

<?php

function foo($i) {
    if (!is_integer($i)) {
        $i = 0;
    }
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "1.4.5";
modifications[] = "Add a default value for parameters"
precision = "P_HIGH"
seeAlso[] = "`Function arguments <https://www.php.net/manual/en/functions.arguments.php>`_"
features[] = "default-value"
phpErrors[] = ""
phpVersion = ""
seeAlso[] = ""

[example1]
project="Zurmo"
file="wp-admin/includes/misc.php"
line="74"
code="        public function getMetadataFilteredByOption($option)
        {
            if ($option == null)
            {
                $option = MissionsListConfigurationForm::LIST_TYPE_AVAILABLE;
            }
            ";
explain="Default values may be a literal (1, 'abc', ...), or a constant : global or class. Here, MissionsListConfigurationForm::LIST_TYPE_AVAILABLE may be used directly in the signature of the method"

[example2]
project="Typo3"
file="typo3/sysext/indexed_search/Classes/FileContentParser.php"
line="821"
code="    public function getIcon($extension)
    {
        if ($extension === 'htm') {
            $extension = 'html';
        } elseif ($extension === 'jpeg') {
            $extension = 'jpg';
        }
        return 'EXT:indexed_search/Resources/Public/Icons/FileTypes/' . $extension . '.gif';
    }
";
explain="$extension could get a default value to handle default situations : for example, a file is htm format by default, unless better known. Also, the if/then structure could get a 'else' clause, to handle unknown situations : those are situations where the extension is provided but not known, in particular when the icon is missing in the storage folder."

