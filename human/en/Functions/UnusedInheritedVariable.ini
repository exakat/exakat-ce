name = "Unused Inherited Variable In Closure";
description = "Some closures forgot to make usage of inherited variables.

Closure have two separate set of incoming variables : the arguments (between parenthesis) and the inherited variables, in the 'use' clause. Inherited variables are extracted from the local environment at creation time, and keep their value until execution. 

The reported closures are requesting some local variables, but do not make any usage of them. They may be considered as dead code.  

<?php

// In this closure, $y is forgotten, but $u is used.
$a = function ($y) use ($u) { return $u; };

// In this closure, $u is forgotten
$a = function ($y, $z) use ($u) { return $u; };

?>

See also `Anonymous functions <https://www.php.net/manual/en/functions.anonymous.php>`_.
";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "1.0.11";

modifications[] = "Remove the unused inherited variable"
modifications[] = "Make us of the unused inherited variable"

[example1]
project="shopware"
file="recovery/update/src/app.php"
line="129"
code="$app->map('/applyMigrations', function () use ($app, $container) {
    $container->get('controller.batch')->applyMigrations();
})->via('GET', 'POST')->name('applyMigrations');

$app->map('/importSnippets', function () use ($container) {
    $container->get('controller.batch')->importSnippets();
})->via('GET', 'POST')->name('importSnippets');

";
explain="In the first closuree, $containere is used as the root for the method calls, but $app is not used. It may be dropped. In fact, some of the following calls to $app->map() only request one inherited, $container."

[example2]
project="Mautic"
file="MauticCrmBundle/Tests/Integration/SalesforceIntegrationTest.php"
line="1202"
code="                function () use (&$restart, $max) {
                    $args = func_get_args();

                    if (false === $args[2]) {
                        return $max;
                    }

                    $createLeads = $this->getLeadsToCreate($args[2], $max);

                    // determine whether to return a count or records
                    if (false === $args[2]) {
                        return count($createLeads);
                    }

                    return $createLeads;
                }

";
explain="$max is relayed to getLeadsToCreate(), while $restart is omitted. It may be dropped, along with its reference."
