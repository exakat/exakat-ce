name = "Methods Without Return";
description = "List of all the functions, closures, methods that have no explicit return. 

Functions with the ``void`` or ``never`` return types, are omitted.";
code = "<?php

// With return null : Explicitly not returning
function withExplicitReturn($a = 1) {
    $a++;
    return null;
}

// Without indication
function withoutExplicitReturn($a = 1) {
    $a++;
}

// With return type void : Explicitly not returning
function withExplicitReturnType($a = 1) : void {
    $a++;
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Add the returntype 'void' to make this explicit behavior";
; Alternative to make this code go away. 
; One by possible solution

features[] = "return";
features[] = "never";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`return <https://www.php.net/manual/en/function.return.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary
