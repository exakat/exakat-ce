name = "Use Named Boolean In Argument Definition";
description = "Boolean values in argument definition are confusing. 

It is recommended to use explicit constant names or enumerations, instead. They are more readable. They also allow for easy replacement when the code evolve and has to replace those booleans by strings. This works even also with classes, and class constants.

<?php

function flipImage($im, $horizontal = NO_HORIZONTAL_FLIP, $vertical = NO_VERTICAL_FLIP) { }

// with constants
const HORIZONTAL_FLIP = true;
const NO_HORIZONTAL_FLIP = true;
const VERTICAL_FLIP = true;
const NO_VERTICAL_FLIP = true;

rotateImage($im, HORIZONTAL_FLIP, NO_VERTICAL_FLIP);


// without constants 
function flipImage($im, $horizontal = false, $vertical = false) { }

rotateImage($im, true, false);

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_SLOW";
exakatSince = "1.0.6";
precision = "P_HIGH"

seeAlso[] = "`Improve Passing Booleans in PHP  <https://freek.dev/2227-improve-passing-booleans-in-php>`_"
seeAlso[] = "`Flag Argument <https://martinfowler.com/bliki/FlagArgument.html>`_"
seeAlso[] = "`Improve Passing Booleans in PHP  <https://freek.dev/2227-improve-passing-booleans-in-php>`_"

features[] = ""

phpErrors[] = ""

phpVersion = ""

modifications[] = "Use available constants whenever possible"
modifications[] = "Create a constant (global or class), and use it"
modifications[] = "Use named parameters to clarify the target of the boolean"
modifications[] = "Use a single-parameter method, so that the value of the boolean is obvious"
modifications[] = "Use an enumeration"

[example1]
project="phpMyAdmin"
file="/libraries/classes/Util.php"
line="1929"
code="public static function checkParameters($params, $request = false) { 
    /**/ 
}";
explain="$request is an option to `checkParameters`, although it is not visibile with is its actual role."

[example2]
project="Cleverstyle"
file="/core/classes/Response.php"
line="129"
code="public function cookie($name, $value, $expire = 0, $httponly = false) { /**/ } 	 { 
    /**/ 
}";
explain="$httponly is an option to `cookie`, and true/false makes it readable. There may be other situations, like fallback, or forcedd usage, so the boolean may be misleading. Note also the `$expire = 0`, which may be a date, or a special value. We need to read the documentation to understand this."
