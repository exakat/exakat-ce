name = "Never Called Parameter";
description = "This analysis reports when a parameter is never used at calltime. 

Such parameter has a default value, and always falls back to it. As such, it may be turned into a local variable.

A never called parameter is often planned for future use, though, so far, the code base doesn't make use of it. It also happens that the code use it, but is not part of the analyzed code base, such as a plugin system.

This issue is silent: it doesn't yield any error. It is also difficult to identify, as it requires checking all the usage of the method.

This analysis checks for actual usage of the parameter, from the outside of the method. This is different from checking if the parameter is used inside the method.
";
code = "<?php

// $b may be turned into a local var, it is unused
function foo($a, $b = 1) {
    return $a + $b;
}

// whenever foo is called, the 2nd arg is not mentioned
foo($a);
foo(3);
foo('a');
foo($c);

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.0.6";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Drop the unused argument in the method definition";
modifications[] = "Actually use the argument when calling the method";
modifications[] = "Drop the default value, and check warnings that mention usage of this parameter";
; Alternative to make this code go away. 
; One by possible solution

features[] = "silent";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
seeAlso[] = "Functions/UnusedArguments";
seeAlso[] = "Functions/CancelledParameter";
seeAlso[] = "Functions/ParameterHiding";
; List of links of interest

related[] = "Classes/CouldBeClassConstant";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

[example1]
project = "Piwigo";
file = "include/functions_html.inc.php";
line = "329";
code = "function bad_request($msg, $alternate_url=null)
{
  set_status_header(400);
  if ($alternate_url==null)
    $alternate_url = make_index_url();
  redirect_html( $alternate_url,
    '<div style=\"text-align:left; margin-left:5em;margin-bottom:5em;\">
<h1 style=\"text-align:left; font-size:36px;\">'.l10n('Bad request').'</h1><br>'
.$msg.'</div>',
    5 );
}
";
explain = "$alternate_url is never explicitly passed to bad_request() : this doesn't show in this extract. It could be dropped from this code.";
