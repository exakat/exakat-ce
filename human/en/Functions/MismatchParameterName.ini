name = "Mismatch Parameter Name";
description = "Parameter name change in overwritten method. This may lead to errors when using PHP 8.0 named arguments. 

PHP use the name of the parameter in the method whose code is executed. When the name change between the method and the overwritten method, the consistency is broken.

<?php

class x {
    function getValue($name) {}
}

class y extends x {
    // consistent with the method above
    function getValue($name) {}
}

class z extends x {
    // inconsistent with the method above
    function getValue($label) {}
}

?>

Here is another example, in early PHP 8.0 (courtesy of `Carnage <https://twitter.com/giveupalready>`_).

<?php

interface Pager 
{
    public function fetch($page = 0, ...$categories);
}
 
class DbPager implements Pager
{
    public function fetch($seite = 0, ...$kategorien)
    {
        var_dump($kategorien);
    }
}
 
$dbPager = new DbPager();
$dbPager->fetch(page: 1, categories: 2);

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.1.8";
precision = "P_HIGH"

phpErrors[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Make sure all the names are the same, between methods"

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "named-parameter";
