name = "Closure Could Be A Callback";
description = "Closure and arrow function may be simplified to a callback. Callbacks are strings or arrays.

A simple closure that only returns arguments relayed to another function or method, could be reduced to a simpler expression.  

Closure may be simplified with a string, for functioncall, with an array for methodcalls and static methodcalls. 

Performances : simplifying a closure tends to reduce the call time by 50%.";
code = "<?php

// Simple and faster call to strtoupper
$filtered = array_map('strtoupper', $array);

// Here the closure doesn't add any feature over strtoupper
$filtered = array_map(function ($x) { return strtoupper($x);}, $array);

// Methodcall example : no fix
$filtered = array_map(function ($x) { return $x->strtoupper() ;}, $array);

// Methodcall example  : replace with array($y, 'strtoupper')
$filtered = array_map(function ($x) use ($y) { return $y->strtoupper($x) ;}, $array);

// Static methodcall example 
$filtered = array_map(function ($x) { return $x::strtoupper() ;}, $array);

// Static methodcall example   : replace with array('A', 'strtoupper')
$filtered = array_map(function ($x) { return A::strtoupper($x) ;}, $array);

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.4.3";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Replace the closure by a string, with the name of the called function";
modifications[] = "Replace the closure by an array, with the name of the called method and the object as first element";
; Alternative to make this code go away. 
; One by possible solution

features[] = "closure";
features[] = "callback";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Closure class <https://www.php.net/closure>`_";
seeAlso[] = "`Callbacks / Callables <https://www.php.net/manual/en/language.types.callable.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Tine20";
file = "tine20/Tinebase/Convert/Json.php";
line = "318";
code = "$value = array_filter($value, function ($val) { return is_scalar($val); });";
explain = "is_scalar() is sufficient here.";

[example2]
project = "NextCloud";
file = "apps/files_sharing/lib/ShareBackend/Folder.php";
line = "114";
code = "			$parents = array_map(function($parent) use ($qb) {
				return $qb->createNamedParameter($parent);
			}, $parents);
";
explain = "$qb is the object for the methodcall, passed via use. The closure may have been replaced with array($qb, 'createNamedParameter').";
