name = "Typehint Must Be Returned";
description = "When using a typehint for a method, it is compulsory to use a at least one return in the method's body. This is true for nullable typehint too : ``return`` alone won't be sufficient.

<?php

// The function returns a value (here, correct object)
function foo() : Bar { return new Bar(); }

// The function should at least, return a value
function foo() : Bar { }

// The function should at least, return a value : Null or an object. Void, here, is not acceptable.
function foo() : ?Bar { return; }

?>

PHP lint this, but won't execute it.

This analysis doesn't check if the returned value is compatible with the returned typehint. Only its presence is checked.

See also `Return Type Declaration <https://www.php.net/manual/en/functions.returning-values.php#functions.returning-values.type-declaration>`_ and 
         `Type hint in PHP function parameters and return values <https://mlocati.github.io/articles/php-type-hinting.html>`_.
";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.6.9";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Add a return with a valid value"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Return value of foo() must be an instance of Bar, none returned "
phpErrors[] = "A function with return type must return a value (did you mean \"return null;\" instead of \"return;\"?)"
