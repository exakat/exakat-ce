name = "No Literal For Reference";
description = "Method arguments and return values may be by reference. Then, they need to be a valid variable.

Objects are always passed by reference, so there is no need to explicitly declare it.

Expressions, including ternary operator, produce value, and can't be used by reference directly. This is also the case for expression that include one or more reference. 

<?php

// variables, properties, static properties, array items are all possible
$a = 1;
foo($a);

//This is not possible, as a literal can't be a reference
foo(1);

function foo(&$int) { return $int; }


// This is not a valid reference
function &bar() { return 2; }
function &bar2() { return 2 + $r; }

?>

Wrongly passing a value as a reference leads to a PHP Notice.

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.9.5";
precision = "P_HIGH"

features[] = 'reference'
features[] = 'literal'

phpVersion = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the reference in the method signature (argument or return value)"
modifications[] = "Make the argument an object, by using a typehint (non-scalar)"
modifications[] = "Put the value into a variable prior to call (or return) the method"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Cannot pass parameter 1 by reference"
phpErrors[] = "Only variable references should be returned by reference"

seeAlso[] = "`References <https://www.php.net/references>`_"
