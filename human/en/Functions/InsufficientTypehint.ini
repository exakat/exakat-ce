name = "Insufficient Typehint";
description = "An argument is typehinted, but it actually calls methods that are not listed in the interface.

Classes may be implementing more methods than the one that are listed in the interface they also implements. This means that filtering objects with a typehint, but calling other methods will be solved at execution time : if the method is available, it will be used; if it is not, a fatal error is reported.

<?php

class x implements i {
    function methodI() {}
    function notInI() {}
}

interface i {
    function methodI();
}

function foo(i $x) {
    $x->methodI(); // this call is valid
    $x->notInI();  // this call is not garanteed
}
?>

Inspired by discussion with `Brandon Savage <https://twitter.com/BrandonSavage>`_.

";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.6.6";
precision = "P_MEDIUM"

features[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Extend the interface with the missing called methods"
modifications[] = "Change the body of the function to use only the methods that are available in the interface"
modifications[] = "Change the used objects so they don't depend on extra methods"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Undefined constant y::I4"
phpVersion = ""

seeAlso[] = ""