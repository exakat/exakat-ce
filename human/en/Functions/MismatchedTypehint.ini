name = "Mismatched Typehint";
description = "Relayed arguments don't have the same typehint.

Typehint acts as a filter method. When an object is checked with a first class, and then checked again with a second distinct class, the whole process is always false : $a can't be of two different classes at the same time.

<?php

// Foo() calls bar()
function foo(A $a, B $b) {
    bar($a, $b);
}

// $a is of A typehint in both methods, but 
// $b is of B then BB typehing
function bar(A $a, BB $b) {

}

?>

Note : This analysis currently doesn't check generalisation of classes : for example, when B is a child of BB, it is still reported as a mismatch.

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.12.3";
precision = "P_HIGH"

modifications[] = "Ensure that the default value match the expected typehint."

[example1]
project="WordPress"
file="wp-admin/includes/misc.php"
line="74"
code="$markerdata = explode( \"\n\", implode( '', file( $filename ) ) );";
explain="This code actually loads the file, join it, then split it again. file() would be sufficient. "
