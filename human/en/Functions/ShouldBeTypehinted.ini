name = "Argument Should Be Typehinted";
description = "When a method expects objects as argument, those arguments should be typehinted. This way, it provides early warning that a wrong object is being sent to the method.

The analyzer will detect situations where a class, or the keywords 'array' or 'callable'. 

<?php

// What are the possible classes that have a 'foo' method? 
function foo($bar) {
    return $bar->foo();
}

?>

Closure arguments are omitted.

";
clearphp = "always-typehint";
severity = "S_MINOR";
timetofix = "T_SLOW";
exakatSince = "0.8.4";
precision = "P_HIGH"
precision = 'P_VERY_HIGH'

modifications[] = "Add the typehint to the function arguments"

features[] = 'typehint'

seeAlso[] = "`Type declarations <https://www.php.net/manual/en/functions.arguments.php#functions.arguments.type-declaration>`_"

phpErrors[] = ""

phpVersion = "";


[example1]
project="Dolphin"
file="Dolphin-v.7.3.5/plugins/intervention-image/Intervention/Image/Gd/Commands/WidenCommand.php"
line="20"
code="        $this->arguments[2] = function ($constraint) use ($additionalConstraints) {
            $constraint->aspectRatio();
            if(is_callable($additionalConstraints)) 
                $additionalConstraints($constraint);
        };
";
explain="This closures make immediate use of the $constraint argument, and calls its method aspectRatio. No check is made on this argument, and it may easily be mistaken with another class, or a null. Adding a typehint here will ensure a more verbose development error and help detect misuse of the closure. "

[example2]
project="Mautic"
file="app/bundles/PluginBundle/Helper/IntegrationHelper.php"
line="374"
code="        if (empty($alphabetical)) {
            // Sort by priority
            uasort($returnServices, function ($a, $b) {
                $aP = (int) $a->getPriority();
                $bP = (int) $b->getPriority();

                if ($aP === $bP) {
                    return 0;
                }

                return ($aP < $bP) ? -1 : 1;
            });

";
explain="This piece of code inside a 275 lines method. Besides, there are 11 classes that offer a 'getPriority' method, although $returnServices could help to semantically reduce the number of possible classes. Here, typehints on $a and $b help using the wrong kind of object. "
