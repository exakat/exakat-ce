name = "Only Variable Passed By Reference";
description = "When an argument is expected by reference, it is compulsory to provide a container. A container may be a variable, an array, a property or a static property. 

This may be linted by PHP, when the function definition is in the same file as the function usage. This is silently linted if definition and usage are separated, if the call is dynamical or made as a method.

<?php

function foo(&$bar) { /**/ }

function &bar() { /**/ }

// This is not possible : strtolower() returns a value
foo(strtolower($string));

// This is valid : bar() returns a reference
foo(bar($string));

?>

This analysis currently covers functioncalls and static methodcalls, but omits methodcalls.
";
clearphp = "";
severity = "S_CRITICAL";
timetofix = "T_SLOW";
exakatSince = "0.11.3";

modifications[] = "Store the previous result in a variable, and then call the function."


[example1]
project="Dolphin"
file="administration/charts.json.php"
line="89"
code="array_pop(array_slice($aData, 0, 1))";
explain="This is not possible, as array_slice() returns a new array, and not a reference. Minimally, the intermediate result must be saved in a variable, then popped. Actually, this code extracts the element at key 1 in the $aData array, although this also works with hash (non-numeric keys)."
[example2]
project="PhpIPAM"
file="functions/classes/class.Thread.php"
line="243"
code="pcntl_waitpid($this->pid, $status = 0)";
explain="This is sneaky bug : the assignation $status = 0 returns a value, and not a variable. This leads PHP to mistake the initialized 0 with the variable $status and fails. It is not possible to initialize variable AND use them as argument."
