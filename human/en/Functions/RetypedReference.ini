name = "Retyped Reference";
description = "A parameter with a reference may be typed differently, at the end of a method call. 

It is possible for a referenced and typed parameter to be retyped during a method call. As such, the type of the used variable might both be checked and changed. 

Using such syntax will lead to confusion in the code.

<?php

$a = [1];
foo($a);
echo $a; // Now, $a is a string

function foo(array &$a) {
    $a = \"Now, I am a string\";
}

?>

This works on all types, scalars or objects. 

This rule will detect variables which are defined with a placeholder value, or even undefined, and are filled during the method call. 

";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.3";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "typehint";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Do not change a referenced variable's type"
modifications[] = "Set the called value to a compatible type."

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""
