name = "Method Is Not For Fluent Interface";
description = "Mark a method when it contains at least one return that doesn't return $this. Such method cannot be used for fluent interface, which always require the current object to be returned. 

Null is not accepted here: it would break the execution of the method call chains if it was returned. 
";
code = "<?php

class x {
	// fluent interface : $this is chainable
	function foo() {
		return $this;
	}

	// Not for fluent interface : the method may return something else
	function goo($a) {
		if ($a == true) {
			return $this;
		} else {
			return 3;
		}
	}
}

?>";
clearphp = "";
severity = "S_NONE";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_NONE";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "method";
features[] = "fluent-interface";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

