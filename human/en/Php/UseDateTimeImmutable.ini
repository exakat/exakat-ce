name = "Use DateTimeImmutable Class";
description = "The DateTimeImmutable class is the immutable version of the Datetime class. 

While DateTime may be modified 'in situ', ``DateTimeImmutable`` cannot be modified. Any modification to such an object will return a new and distinct object. This avoid interferences that are hard to track.

<?php
// Example extracted from Derick Rethans' article (link below)

function formatNextMondayFromNow( DateTime $dt )
{
        return $dt->modify( 'next monday' )->format( 'Y-m-d' );
}

$d = new DateTime();                          //2014-02-17
echo formatNextMondayFromNow( $d ), "\n";
echo $d->format( 'Y-m-d' ), "\n";             //2014-02-17
?>

See also `What's all this 'immutable date' stuff, anyway? <https://medium.com/@codebyjeff/whats-all-this-immutable-date-stuff-anyway-72d4130af8ce>`_,
         `DateTimeImmutable <https://derickrethans.nl/immutable-datetime.html>`_, 
         `The DateTime class <https://www.php.net/manual/en/class.datetime.php>`_ and
         `The DateTimeImmutable class <https://www.php.net/manual/en/class.datetimeimmutable.php>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.8.7";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Always use DateTimeImmutable when manipulating dates."

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""
