name = "Php7 Relaxed Keyword";
description = "Most of the traditional PHP keywords may be used inside classes, enums, traits and interfaces: they can be used as constant or method name. 

It is recommended to use this syntax cautiously, as it leads to a lot of surprises and confusion from unususpecting developpers.

This was not the case in PHP 5, and will yield parse errors.";
code = "<?php

// Compatible with PHP 7.0 + 
class foo {
	const array = []; 

    // as is a PHP 5 keyword
    public function as() {
    	print_r(self::array);
    }
}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "keyword";
features[] = "reserved-name";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Loosening Reserved Word Restrictions <https://www.php.net/manual/en/migration70.other-changes.php#migration70.other-changes.loosening-reserved-words>`_";
; List of links of interest

related[] = "Namespaces/NoKeywordInNamespace";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "7.0+";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary
