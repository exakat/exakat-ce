name = "Scalar Typehint Usage";
description = "Spot usage of scalar type hint : ``int``, ``float``, ``boolean`` and ``string``.

Scalar typehint are PHP 7.0 and more recent. Some, like ``object``, is 7.2.

Scalar typehint were not supported in PHP 5 and older. Then, the typehint is treated as a class name.";
code = "<?php

function withScalarTypehint(string $x) {}

function withoutScalarTypehint(someClass $x) {}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "scalar-typehint";
features[] = "typehint";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`PHP RFC: Scalar Type Hints <https://wiki.php.net/rfc/scalar_type_hints>`_";
seeAlso[] = "`Type declarations <https://www.php.net/manual/en/functions.arguments.php#functions.arguments.type-declaration>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "7.0+";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "7.0";
; Which version did that behavior changed
changedBehavior_details = "";

