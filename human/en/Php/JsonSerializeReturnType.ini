name = "PHP Native Interfaces and Return Type";
description = "Native PHP interface which define a type, expect the derived methods to use the same time. In particular, a mixed return type was added to the jsonSerialize() of the JsonSerialize PHP interface. 

In PHP 8.1, the mixed return type is now enforced, and a deprecated notice is displayed.

One solution is to add the good return type, or to use the `#[ReturnTypeWillChange]` attribute.

<?php
    class MyJsonSerialize implements jsonserialize { 
        function jsonserialize() : int {}
    }
?>

This rule covers the following interfaces : 

+ ArrayAccess
+ Countable
+ Exception
+ FilterIterator
+ Iterator
+ JsonSerializable
+ php_user_filter
+ SessionHandlerInterface

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.0";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = "8.0+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpDeprecation = "8.1";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

features[] = "json"

seeAlso[] = "`JsonSerializable::jsonSerialize <https://www.php.net/manual/en/jsonserializable.jsonserialize.php>`_"

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Add the mixed returntype to all implementation of the jsonSerialize method"
modifications[] = "Add the #[\ReturnTypeWillChange] attribute to the method"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Return type of x::jsonserialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
