name = "PHP Keywords As Names";
description = "PHP has a set of reserved keywords. It is recommended not to use those keywords for names structures. 

PHP does check that a number of structures, such as classes, methods, interfaces... can't be named or called using one of the keywords. However, in a few other situations, no check are enforced. Using keywords in such situation is confusing.";
code = "<?php

// This keyword is reserved since PHP 7.2
class object {
    // _POST is used by PHP for the $_POST variable
    // This methods name is probably confusing, 
    // and may attract more than its share of attention
    function _POST() {
    
    }
}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Rename the structure";
modifications[] = "Choose another naming convention to avoid conflict and rename the current structures";
; Alternative to make this code go away. 
; One by possible solution

features[] = "reserved-name";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`List of Keywords <https://www.php.net/manual/en/reserved.keywords.php>`_";
seeAlso[] = "`Predefined Classes <https://www.php.net/manual/en/reserved.classes.php>`_";
seeAlso[] = "`Predefined Constants <https://www.php.net/manual/en/reserved.constants.php>`_";
seeAlso[] = "`List of other reserved words <https://www.php.net/manual/en/reserved.other-reserved-words.php>`_";
seeAlso[] = "`Predefined Variables <https://www.php.net/manual/en/reserved.variables.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[parameter1]
name = "reservedNames";
default = "";
type = "string";
description = "Other reserved names : all in a string, comma separated.";

[parameter2]
name = "allowedNames";
default = "";
type = "string";
description = "PHP reserved names that can be used in the code. All in a string, comma separated.";

[example1]
project = "ChurchCRM";
file = "src/kiosk/index.php";
line = "42";
code = "if (!isset($_COOKIE['kioskCookie'])) {
    if ($windowOpen) {
        $guid = uniqid();
        setcookie("kioskCookie", $guid, 2147483647);
        $Kiosk = new \ChurchCRM\KioskDevice();
        $Kiosk->setGUIDHash(hash('sha256', $guid));
        $Kiosk->setAccepted($false);
        $Kiosk->save();
    } else {
        header("HTTP/1.1 401 Unauthorized");
        exit;
    }
}
";
explain = "$false may be true or false (or else...). In fact, the variable is not even defined in this file, and the file do a lot of inclusion. ";

[example2]
project = "xataface";
file = "Dataface/Record.php";
line = "1278";
code = "	function &getRelatedRecord($relationshipName, $index=0, $where=0, $sort=0){
		if ( isset($this->cache[__FUNCTION__][$relationshipName][$index][$where][$sort]) ){
			return $this->cache[__FUNCTION__][$relationshipName][$index][$where][$sort];
		}
		$it = $this->getRelationshipIterator($relationshipName, $index, 1, $where, $sort);
		if ( $it->hasNext() ){
			$rec =& $it->next();
			$this->cache[__FUNCTION__][$relationshipName][$index][$where][$sort] =& $rec;
			return $rec;
		} else {
			$null = null;	// stupid hack because literal 'null' can't be returned by ref.
			return $null;
		}
	}
";
explain = "This one is documented, and in the end, makes a lot of sense.";
