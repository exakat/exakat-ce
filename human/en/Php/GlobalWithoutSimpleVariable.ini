name = "Simple Global Variable";
description = "The global keyword should only be used with simple variables. Since PHP 7, it cannot be used with complex or dynamic structures.";
code = "<?php

// Forbidden in PHP 7
global $normalGlobal;

// Forbidden in PHP 7
global $$variable->global ;

// Tolerated in PHP 7
global $\{$variable->global\}; 

?>";
clearphp = "";
severity = "S_CRITICAL";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Add curly braces so the syntax is compatibles PHP 5 and PHP 7";
modifications[] = "Remove this syntax, and access the variable through another way : argument, array, property.";
; Alternative to make this code go away. 
; One by possible solution

features[] = "global";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Changes to the handling of indirect variables, properties, and methods <https://www.php.net/manual/en/migration70.incompatible.php#migration70.incompatible.variable-handling.indirect>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "7.0-";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "7.0";
; Which version did that behavior changed
changedBehavior_details = "";

