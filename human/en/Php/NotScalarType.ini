name = "Not A Scalar Type";
description = "``int`` is the actual PHP scalar type, not ``integer``. 

PHP 7 introduced several scalar types, in particular ``int``, ``bool``, ``string`` and ``float``. Those three types are easily mistaken with ``integer``, ``boolean``, ``real`` and ``double``. 

Unless those classes actually exists, PHP emits some strange error messages.

<?php

// This expects a scalar of type 'integer'
function foo(int $i) {}

// This expects a object of class 'integer'
function abr(integer $i) {}

?>

Thanks to ``Benoit Viguier`` for the `original idea <https://twitter.com/b_viguier/status/940173951908700161>`__ for this analysis.

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_INSTANT";
exakatSince = "1.0.7";
precision = "P_VERY_HIGH";

modifications[] = "Do not use ``int`` as a class name, an interface name or a trait name."

seeAlso[] = "`Type declarations <https://www.php.net/manual/en/functions.arguments.php#functions.arguments.type-declaration>`_"
seeAlso[] = "`PHP RFC: Scalar Type Hints <https://wiki.php.net/rfc/scalar_type_hints>`_"

phpErrors[] = "\"boolean\" will be interpreted as a class name. Did you mean \"bool\"? ";

features[]=  "scalar-typehint"
phpVersion=""