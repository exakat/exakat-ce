name = "Avoid set_error_handler $context Argument";
description = "Avoid configuring set_error_handler() with a method that accepts 5 arguments. The last argument, ``$errcontext``, is deprecated since PHP 7.2, and will be removed later.

<?php

// setting error_handler with an incorrect closure
set_error_handler(function($errno, $errstr, $errfile, $errline) {});

// setting error_handler with an incorrect closure
set_error_handler(function($errno, $errstr, $errfile, $errline, $errcontext) {});

?>

See also set_error_handler();
";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_SLOW";
exakatSince = "1.0.4";

modifications[] = "Remove the 6th argument of registered handlers."

[example1]
project="shopware"
file="engine/Shopware/Plugins/Default/Core/ErrorHandler/Bootstrap.php"
line="162"
code="    public function registerErrorHandler($errorLevel = E_ALL)
    {
        // Only register once.  Avoids loop issues if it gets registered twice.
        if (self::$_registeredErrorHandler) {
            set_error_handler([$this, 'errorHandler'], $errorLevel);

            return $this;
        }

        self::$_origErrorHandler = set_error_handler([$this, 'errorHandler'], $errorLevel);
        self::$_registeredErrorHandler = true;

        return $this;
    }
";
explain="The registered handler is a local method, called ``errorHandler``, which has 6 arguments, and relays those 6 arguments to set_error_handler(). "

[example2]
project="Vanilla"
file="library/core/functions.error.php";
line="747"
code="set_error_handler('Gdn_ErrorHandler', E_ALL & ~E_STRICT)";
explain="Gdn_ErrorHandler is a function that requires 6 arguments. "

