name = "** For Exponent";
description = "The operator ``**`` calculates exponents, also known as power. 

Use it instead of the slower function pow(). This operator was introduced in PHP 5.6.

<?php
    $cube = pow(2, 3); // 8

    $cubeInPHP56 = 2 ** 3; // 8
?>

Be aware the the '-' operator has lower priority than the ** operator : this leads to the following confusing result.

<?php
    echo -3 ** 2;
    // displays -9, instead of 9
?>

This is due to the parser that processes separately ``-`` and the following number. Since ``**`` has priority, the power operation happens first.

Being an operator, ``**`` is faster than pow(). This is a microoptimisation. 

See also `Arithmetic Operators <https://www.php.net/manual/en/language.operators.arithmetic.php>`_.
";
clearphp = "";
phpVersion = "5.6+";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision = "P_VERY_HIGH"

modifications[] = "Use the ``**`` operator";
modifications[] = "For powers of 2, use the bitshift operators";
modifications[] = "For literal powers of 2, consider using the ``0xFFFFFFFFF`` syntax.";


[example1]
project="Traq"
file="src/views/layouts/_footer.phtm"
line="5"
code="			<?=round((microtime(true) - START_TIME), 2); ?>s, <?php echo round((memory_get_peak_usage() - START_MEM) / pow(1024, 2), 3)?>mb";
explain="pow(1024, 2) could be (1023 ** 2), to convert bytes into Mb. "

[example2]
project="TeamPass"
file="includes/libraries/Authentication/phpseclib/Math/BigInteger.php"
line="286"
code="pow(2, 62)";
explain="pow(2, 62) could also be hard coded with 0x4000000000000000. "
