name = "Php 8.0 Variable Syntax Tweaks";
description = "Several variable syntaxes are added in version 8.0. They extends the PHP 7.0 syntax updates, and fix a number of edges cases.

In particular, ``new``and ``instanceof`` now support a way to inline the expression, rather than use a temporary variable.

Magic constants are now accessible with array notation, just like another constant. It is also possible to use method calls : although this is Syntacticly correct for PHP, this won't be executed, as the left operand is a string, and not an object.

<?php

 // array name is dynamically build
 echo "foo$bar"[0];
 // static method
 "foo$bar"::baz();
 // static property 
 "foo$bar"::$baz;
 
 // Syntactly correct, but not executable
 "foo$bar"->baz();
 
 // expressions with instanceof and new
    $object = new ("class_".$name);
    $x instanceof ("class_$name");

    // PHP 7.0 style
    $className = "class_".$name;
    $object = new $className;

?>
";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.0.8";

seeAlso[] = "`PHP RFC: Variable Syntax Tweaks <https://wiki.php.net/rfc/variable_syntax_tweaks>`_"
seeAlso[] = "`scalar_objects in PHP <https://github.com/nikic/scalar_objects>`_"

; Alternative to make this code go away. 
; One by possible solution
;;modifications[] = ""

features[] = "variable"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""
phpVersion = ""

; Optional parameters
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";
