name = "Could Be A Constant";
description = "This analysis detects literal values that make good candidate for constants. 

Candidates needs two characteristics : 

+ Be assigned as a whole to a container (variable, properties, etc.)
+ Be later (or somewhere else) compared to a container. 

Such literal is used as a token, to handle a state. It is set, then read later. Then, a constant, may it be global or class, is important, so that the relationship between the setting and the reading is maintained throughout the life of the application.

Once the literal is converted into a constant, the value of the literal is not important. It could even be turned into an object. 
Not all literals that are set then read may be turned into a constant : there might be overlap in features by frequently used values (such as true, false, 0, 1, ) or simple confusion with a local literal. Also, literals that are used for their value (like 1 in a `$a + 1` expression) are not good candidates.";
code = "<?php

const SOME_TOKEN = 'abc';

$a = 'some-token';
$b = SOME_TOKEN; // same as above, as a constant

function foo($arg) {
    if ($arg === 'some-token') {
    
    }

    if ($arg === SOME_TOKEN) {
    
    }
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.0";
precision = "P_MEDIUM";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Create the constant and replace all connected literals with it. ";
; Alternative to make this code go away. 
; One by possible solution

features[] = "constant";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[parameter1]
name = "minOccurences";
default = "1";
type = "integer";
description = "Minimal number of occurrences of the literal.";

[parameter2]
name = "skipString";
default = ",.php";
type = "array";
description = "List of omitted string values. For example, the empty string.";

[parameter3]
name = "skipInteger";
default = "1,-0,-1";
type = "array";
description = "List of omitted integer values. By default, 0, 1 and -1.";
