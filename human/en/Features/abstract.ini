name = "Abstract Keyword";
id = "abstract"
alias[] = ""
description = "PHP has abstract classes and methods. Classes defined as abstract cannot be instantiated, and any class that contains at least one abstract method must also be abstract."
code = "<?php
abstract class AbstractClass
{
    // Force Extending class to define this method
    abstract protected function getValue();
    abstract protected function prefixValue($prefix);

    // Common method
    public function printOut() {
        print $this->getValue() . \"\\n\";
    }
}

?>"
documentation = "https://www.php.net/manual/en/language.oop5.abstract.php"
analyzers[] = ""
cobblers[] = ""
phpVersionSince = ""
phpVersionUntil = ""
related[] = "final"
seeAlso[] = "`Interfaces vs Abstract Classes in PHP <https://ashallendesign.co.uk/blog/interfaces-vs-abstract-classes-in-php>`_"
seeAlso[] = "`Abstract classes and methods <https://phpenthusiast.com/object-oriented-php-tutorials/abstract-classes-and-methods>`_"
seeAlso[] = "`Interfaces vs Abstract Classes in PHP <https://ashallendesign.co.uk/blog/interfaces-vs-abstract-classes-in-php>`_"
seeAlso[] = "`Testing Abstract Classes in PHP using Anonymous Classes <https://www.otsch.codes/blog/testing-abstract-classes-in-php-using-anonymous-classes>`_"
tags[] = "abstract"
tags[] = "keyword"
phpVersionDeprecated = "";
popularity = "";
rule = "";
packagist[] = "";
