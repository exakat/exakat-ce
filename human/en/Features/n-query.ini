name = "N+1 Query Problem";
id = "n-query"
alias[] = ""
description = "The \"N+1 query problem\" is a term used in the context of database queries, often in the context of Object-Relational Mapping (ORM) systems. This issue arises when a program queries a database for a set of entities (usually rows from a table) and then, for each of those entities, issues an additional query to retrieve related data. This leads to a large number of individual queries being executed, which can result in poor performance and increased database load.

Here's a breakdown of the issue:

+ Initial Query (N queries): The program retrieves a set of main entities, let's say a list of users. This query retrieves 'N' records.

+ Subsequent Queries (+1 queries): For each of the 'N' users, the program issues a separate query to fetch additional related data, such as user roles, posts, comments, etc. This results in an additional 'N' queries.

As a result, you end up with a total of 'N+1' queries, hence the term \"N+1 query problem\". This approach can cause significant performance issues, as executing many individual queries can be slower than fetching the required data in a more optimized way.
"
code = ""
documentation = "https://www.freecodecamp.org/news/n-plus-one-query-problem/"
analyzers[] = ""
cobblers[] = ""
phpVersionSince = ""
phpVersionUntil = ""
related[] = "loop"
seeAlso[]=  "`Eloquent Performance: 4 Examples of N+1 Query Problems <https://laravel-news.com/laravel-n1-query-problems>`_"
seeAlso[]=  "`The N+1 Query Problem <https://lighthouse-php.com/master/performance/n-plus-one.html>`_"
tags[] = "bug"
tags[] = "concept"
