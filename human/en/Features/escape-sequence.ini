name = "Escape Sequences";
id = "escape-sequence"
alias[] = "string-sequence"
description = "Escape sequences are sequences of characters with a special meaning. Most of the time, the literal value of the character displayed is its meaning, while, sometimes, there are other hidden meaning.

An escape sequence is dedicated to a technology, and they are rare the same between two technologies, or even, between two engines dedicated to that technology.

Here are some examples of escape sequences.

PHP, in strings: 
  + \\n (new line)
  + \\t (horizontal tabulation)
  + \"  (double quote, inside a double quoted-string)
  + \"  This is not an escape sequence : single quoted string do not recognize this
  + \\u{01f418} : a unicode codepoint, representing an elephpant
  + \\200 : a character in octal notation
  + \\x69 : a character in hexadecimal notation

HTML : 
 + &acute; (a acute accent)
 + &quote; (double quote)

Escape sequences should not be confused with escape characters, though they are related : some escape sequences are introduced by an escape character. Others rely on a format. 
 
"
code = "<?php

// \\1 is an escape sequence that represents the first capturing parenthsis. 
// It is a special meaning for REGEX.
preg_match('/(.)\\1/', $string);

// Displays AA
echo \"A\\101\";

?>"
documentation = "https://www.php.net/manual/en/regexp.reference.escape.php"
analyzers[] = "Security/Sqlite3RequiresSingleQuotes"
cobblers[] = ""
phpVersionSince = ""
phpVersionUntil = ""
related[] = ""
tags[] = "concept"

seeAlso[] = "`String literals (MySQL) <https://dev.mysql.com/doc/refman/8.0/en/string-literals.html>`_"
seeAlso[] = "`Lexical Structure (PostgreSQL) <https://www.postgresql.org/docs/current/sql-syntax-lexical.html#:~:text=PostgreSQL%20also%20accepts%20%E2%80%9Cescape%E2%80%9D%20string,e.g.%2C%20E'foo'%20.>`_"
seeAlso[] = "`INI file <https://en.wikipedia.org/wiki/INI_file.>`_"
