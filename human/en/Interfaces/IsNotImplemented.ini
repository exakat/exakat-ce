name = "Interfaces Is Not Implemented";
description = "Classes that implements interfaces, must implements each of the interface's methods. 

<?php

class x implements i {
    // This method implements the foo method from the i interface
    function foo() {}

    // The method bar is missing, yet is requested by interface i
    function foo() {}
}

interface i {
    function foo();
    function bar(); 
}

?>

This problem tends to occur in code that splits interfaces and classes by file. This means that PHP's linting will skip the definitions and not find the problem. At execution time, the definitions will be checked, and a Fatal error will occur.

This situation usually detects code that was forgotten during a refactorisation of the interface or the class and its sibblings.

See also `Interfaces <https://www.php.net/manual/en/language.oop5.interfaces.php>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.9.5";
precision = "P_HIGH"

features[] = 'interfaces'

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Implements all the methods from the interfaces"
modifications[] = "Remove the class"
modifications[] = "Make the class abstract"
modifications[] = "Make the missing methods abstract"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Class x contains 2 abstract methods and must therefore be declared abstract or implement the remaining methods (x::m1, x::m2)"
