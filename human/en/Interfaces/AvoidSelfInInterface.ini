name = "Avoid Self In Interface";
description = "Self and Parent are tricky when used in an interface. 

``self`` refers to the current interface or its extended parents : as long as the constant is defined in the interface family, this is valid.  On the other hand, when ``self`` refers to the current class, the resolution of names would happen at execution time, leading to undefined errors.

``self`` may be used for typing : then, argument types in the host class must use the interface name, and can't use ``self`` nor the class name, for compatibility reason. ``self`` can be used for returntype, as expected.

``parent`` has the same behavior than ``self``, except that it cannot be used inside an interface. This is one of those error that lint but won't execute in certain conditions : namely, when a class implements the interface with parent, but has no parent by itself. This is now a dependency to the host class.

``static`` can't be used in an interface, as it needs to be resolved at call time.

<?php

interface i extends ii {
    // This 'self' is valid : it refers to the interface i
    public const I = self::I2 + 2;

    // This 'self' is also valid, as it refers to interface ii, which is a part of interface i
    public const I2 = self::IP + 4; 

    // This makes interface i dependant on the host class
    public const I3 = parent::A;

    // This makes interface i dependant on the host class, where X must be defined. 
    // It actually yields an error :  Undefined class constant 'self::I'
    public const I4 = self::X;
}

class x implements k {
    const X = 1;
}
?>

";
clearphp = "";
severity = "S_CRITICAL";
timetofix = "T_SLOW";
exakatSince = "1.5.4";
precision = "P_VERY_HIGH"

seeAlso[] = "`Scope Resolution Operator (::) <https://www.php.net/manual/en/language.oop5.paamayim-nekudotayim.php>`_"

features[] = "self"
features[] = "interface"

modifications[] = "Use a fully qualified namespace instead of self"
modifications[] = "Use a locally defined constant, so self is a valid reference"

phpErrors[] = "Cannot access parent:: when current class scope has no parent";
phpErrors[] = "Undefined class constant";
phpErrors[] = "static:: is not allowed in compile-time constants";

phpVersion = ""