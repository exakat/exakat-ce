name = "Already Parents Interface";
description = "The same interface is implemented by a class and one of its children. 

That way, the child doesn't need to implement the interface, nor define its methods to be an instance of the interface. 

<?php

interface i { 
    function i();
}

class A implements i {
    function i() {
        return __METHOD__;
    }
}

// This implements is useless. 
class AB extends A implements i {
    // No definition for function i()
}

// Implements i is understated
class AB extends A {
    // redefinition of the i method
    function i() {
        return __METHOD__.' ';
    }
}

$x = new AB;
var_dump($x instanceof i);
// true

$x = new AC;
var_dump($x instanceof i);
// true

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";
precision="P_VERY_HIGH"

modifications[] = "Keep the implements call in the class that do implements the methods. Remove it from the children classes."

[example1]
project="WordPress"
file="src/Phinx/Db/Adapter/AbstractAdapter.php"
line="41"
code="/**
 * Base Abstract Database Adapter.
 */
abstract class AbstractAdapter implements AdapterInterface
{

/// In the src/src/Phinx/Db/Adapter/SqlServerAdapter.php, line 45
/**
 * Phinx SqlServer Adapter.
 *
 */
class SqlServerAdapter extends PdoAdapter implements AdapterInterface
{


";
explain="SqlServerAdapter extends PdoAdapter, PdoAdapter extends AbstractAdapter. The first and the last both implements AdapterInterface. Only one is needed."

[example2]
project="Thelia"
file="core/lib/Thelia/Core/Template/Loop/BaseSpecificModule.php"
line="35"
code="abstract class BaseSpecificModule extends BaseI18nLoop implements PropelSearchLoopInterface

/* in file  core/lib/Thelia/Core/Template/Loop/Payment.php, line 28 */

class Payment extends BaseSpecificModule implements PropelSearchLoopInterface

";
explain="PropelSearchLoopInterface is implemented by both BaseSpecificModule and Payment";
