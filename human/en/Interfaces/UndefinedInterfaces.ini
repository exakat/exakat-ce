name = "Undefined Interfaces";
description = "Some typehints or ``instanceof`` that are relying on undefined interfaces or classes. They will always return false. Any condition based upon them are dead code.

<?php

class var implements undefinedInterface {
    // If undefinedInterface is undefined, this code lints but doesn't run
}

if ($o instanceof undefinedInterface) {
    // This is silent dead code
}

function foo(undefinedInterface $a) {
    // This is dead code
    // it will probably be discovered at execution
}

?>

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision="P_HIGH"

features[] = "interface"

phpVersion=""

phpErrors[] = "Argument #1 ($a) must be of type T"

seeAlso[] = "`Object interfaces <https://www.php.net/manual/en/language.oop5.interfaces.php>`_";
seeAlso[] = "`Type declarations <https://www.php.net/manual/en/functions.arguments.php#functions.arguments.type-declaration>`_";
seeAlso[] = "`Instanceof <https://www.php.net/manual/en/language.operators.type.php>`_";

modifications[] = "Implement the missing interfaces"
modifications[] = "Remove the code governed by the missing interface : the whole method if it is an typehint, the whole if/then if it is a condition."

isPHP = 1;
isExt = 1;
isStubs = 1;

[example1]
project="xataface"
file="Dataface/Error.php"
line="112"
code="	public static function isError($obj){
		if ( !PEAR::isError($obj) and !($obj instanceof Exception_) ) return false;
		return ($obj->getCode() >= DATAFACE_E_ERROR);
	}
";
explain="Exception seems to be a typo, and leads to an always-true expression."
