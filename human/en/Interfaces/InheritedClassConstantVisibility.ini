name = "Inherited Class Constant Visibility";
description = "Visibility of class constant must be public, even when overwritten. 

This was not checked until PHP 8.3, where it is now a Fatal Error. When the interface and the class are defined in different files, the error appears at execution time.";
code = "<?php

interface i {
	public const I = 1;
	public const J = 2;
}

class x implements i {
	// This should not be possible
	private const I = 10;
	public const J = 20;
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.3";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Set the constant visibility in the class to public";
modifications[] = "Remove the visibility of the constant in the class";
; Alternative to make this code go away. 
; One by possible solution

features[] = "visibility";
features[] = "lazy-loading";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "8.2";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "Access level to x::I must be public (as in interface i)";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary
