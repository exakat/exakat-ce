name = "Slow Functions";
description = "Avoid using those slow native PHP functions, and replace them with alternatives.

<?php

$array = source();

// Slow extraction of distinct values
$array = array_unique($array);

// Much faster extraction of distinct values
$array = array_keys(array_count_values($array));

?>

+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| Slow Function                                                 |  Faster                                                                                                                    | 
+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| array_diff()              |  foreach()                                               | 
| array_intersect()    |  foreach()                                               | 
| array_key_exists()  |  isset() and array_key_exists()               | 
| array_map()                |  foreach()                                               | 
| array_search()          |  array_flip() and isset()                           | 
| array_udiff()            |  Use another way                                                                                                           | 
| array_uintersect()  |  Use another way                                                                                                           | 
| array_unshift()        |  Use another way                                                                                                           | 
| array_walk()              |  foreach()                                               | 
| in_array()                  |  isset()                                                                                | 
| preg_replace()          |  strpos()                                                                                  | 
| strstr()                      |  strpos()                                                                                  | 
| uasort()                      |  Use another way                                                                                                           | 
| uksort()                      |  Use another way                                                                                                           | 
| usort()                        |  Use another way                                                                                                           | 
| array_unique()          |  array_keys() and array_count_values()     | 
+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+

array_unique() has been accelerated in PHP 7.2 and may be used directly from this version on : `Optimize array_unique() <https://github.com/php/php-src/commit/6c2c7a023da4223e41fea0225c51a417fc8eb10d>`_.

array_key_exists() has been accelerated in PHP 7.4 and may be used directly from this version on : `Implement ZEND_ARRAY_KEY_EXISTS opcode to speed up array_key_exists() <https://github.com/php/php-src/pull/3360>`_.

";
clearphp = "avoid-those-slow-functions";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
modifications[] = "Replace the slow function with a faster version"
modifications[] = "Remove the usage of the slow function"
[example1]
project="ChurchCRM"
file="src/Reports/PrintDeposit.php"
line="35"
code="array_key_exists(\"report_type\", $_POST);";
explain="You may replace this with a isset() : $_POST can't contain a NULL value, unless it was set by the script itself."
[example2]
project="SuiteCrm"
file= "include/json_config.php"
line="242"
code="preg_replace(\"/\r\n/\", \"<BR>\", $focus->$field)";
explain="This is a equivalent for nl2br()"
