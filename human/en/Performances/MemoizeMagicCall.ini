name = "Memoize MagicCall";
description = "Cache calls to magic methods in local variable. Local cache is faster than calling again the magic method as soon as the second call, provided that the value hasn't changed.

``__get`` is slower, as it turns a simple member access into a full method call. 
The caching is not possible if the processing of the object changes the value of the property.";
code = "<?php

class x {
    private $values = array();
    
    function __get($name) {
        return $this->values[$name];
    }
    // more code to set values to this class
}

function foo(x $b) {
    $a = $b->a; 
    $c = $b->c;
    
    $d = $c;     // using local cache, no new access to $b->__get($name)
    $e = $b->a;  // Second access to $b->a, through __get
}

function bar(x $b) {
    $a = $b->a; 
    $c = $b->c;
    
    $b->bar2(); // this changes $b->a and $b->c, but we don't see it
    
    $d = $b->c; 
    $e = $b->a;  // Second access to $b->a, through __get
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.8.3";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Cache the value in a local variable, and reuse that variable";
modifications[] = "Make the property concrete in the class, so as to avoid __get() altogether";
; Alternative to make this code go away. 
; One by possible solution

features[] = "memoization";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`__get performance questions with PHP <https://stackoverflow.com/questions/3330852/get-set-call-performance-questions-with-php>`_";
seeAlso[] = "Classes/MakeMagicConcrete";
seeAlso[] = "`Benchmarking magic <https://www.garfieldtech.com/blog/benchmarking-magic>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[parameter1]
name = "minMagicCallsToGet";
default = "2";
type = "integer";
description = "Minimal number of calls of a magic property to make it worth locally caching.";
