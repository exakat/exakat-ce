name = "Double array_flip()";
description = "Avoid double array_flip() to gain speed. While array_flip() alone is usually useful, a double call to array_flip() is made to make values and keys unique. 

<?php

// without array_flip
function foo($array, $value) {
    $key = array_search($array, $value);
    
    if ($key !== false) {
        unset($array[$key]);
    }
    
    return $array;
}

// double array_flip
// array_flip() usage means that $array's values are all unique
function foo($array, $value) {
    $flipped = array_flip($value);
    unset($flipped[$value]);
    return array_flip($flipped);
}

?>

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "1.1.4";
precision = "P_VERY_HIGH"

features[] = ""

phpErrors[] = ""

seeAlso[] = ""

modifications[] = "Use array_unique() or array_count_values()."
modifications[] = "Use array_flip() once, and let PHP garbage collect it later."
modifications[] = "Keep the original values in a separate variable."


[example1]
project="NextCloud"
file="lib/public/AppFramework/Http/EmptyContentSecurityPolicy.php"
line="372"
code="			if(is_string($this->useJsNonce)) {
				$policy .= '\'nonce-'.base64_encode($this->useJsNonce).'\'';
				$allowedScriptDomains = array_flip($this->allowedScriptDomains);
				unset($allowedScriptDomains['\'self\'']);
				$this->allowedScriptDomains = array_flip($allowedScriptDomains);
				if(count($allowedScriptDomains) !== 0) {
					$policy .= ' ';
				}
			}
";
explain="The array $allowedScriptDomains is flipped, to unset 'self', then, unflipped (or flipped again), to restore its initial state. Using array_keys() or array_search() would yield the needed keys for unsetting, at a lower cost."
