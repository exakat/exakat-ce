name = "No Count With 0";
description = "Comparing count(), strlen() or mb_strlen() to 0 is a waste of resources. There are three distinct situations.

When comparing count() with 0, with ===, ==, !==, !=, it is more efficient to use empty(). empty() is a language construct that checks if a value is present, while count() actually load the number of element.
When comparing count() strictly with 0 and ``>``, it is more efficient to use ``!(empty(  ))``
Comparing count(), strlen() or mb_strlen() with other values than 0 cannot be replaced with a comparison with empty().

Note that this is a micro-optimisation : since PHP keeps track of the number of elements in arrays (or number of chars in strings), the total computing time of both operations is often lower than a ms. However, both functions tends to be heavily used, and may even be used inside loops.";
code = "<?php

// Checking if an array is empty
if (count($array) == 0) {
    // doSomething();
}
// This may be replaced with 
if (empty($array)) {
    // doSomething();
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_INSTANT";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Use empty() on the data";
modifications[] = "Compare the variable with a default value, such as an empty array";
; Alternative to make this code go away. 
; One by possible solution

features[] = "count";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`count <https://www.php.net/count>`_";
seeAlso[] = "`strlen <https://www.php.net/strlen>`_";
seeAlso[] = "`mb_strlen <https://www.php.net/mb_strlen>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Contao";
file = "system/modules/repository/classes/RepositoryManager.php";
line = "1148";
code = "$ext->found = count($elist)>0;";
explain = "If $elist contains at least one element, then it is not empty().";

[example2]
project = "WordPress";
file = "wp-admin/includes/misc.php";
line = "74";
code = "    // Check for zero length, although unlikely here
    if (strlen($built) == 0 || strlen($signature) == 0) {
      return false;
    }
";
explain = "$build or $signature are empty at that point, no need to calculate their respective length. ";
