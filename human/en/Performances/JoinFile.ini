name = "Joining file()";
description = "Use file() to read lines separately. 

Applying join('', ) or implode('', ) to the result of file() provides the same results than using file_get_contents(), but at a higher cost of memory and processing.

If the delimiter is not '', then implode() and file() are a better solution than file_get_contents() and str_replace() or nl2br().

<?php

// memory intensive
$content = file_get_contents('path/to/file.txt');

// memory and CPU intensive
$content = join('', file('path/to/file.txt'));

// Consider reading the data line by line and processing it along the way, 
// to save memory 
$fp = fopen('path/to/file.txt', 'r');
while($line = fget($fp)) {
    // process a line
}
fclose($fp);

?>

Always use file_get_contents() to get the content of a file as a string. Consider using readfile() to echo the content directly to the output.

See also `file_get_contents <https://www.php.net/file_get_contents>`_ and 
         `file <https://www.php.net/file>`_.
";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
modifications[] = "Use file_get_contents() instead of implode(file()) to read the whole file at once."
modifications[] = "Use readfile() to echo the content to stdout at once."
modifications[] = "Use fopen() to read the lines one by one, generator style."
[example1]
project="WordPress"
file="wp-admin/includes/misc.php"
line="74"
code="$markerdata = explode( \"\n\", implode( '', file( $filename ) ) );";
explain="This code actually loads the file, join it, then split it again. file() would be sufficient. "
[example2]
project="SPIP"
file="ecrire/inc/install.php"
line="109"
code="$s = @join('', file($file));";
explain="When the file is not accessible, file() returns null, and can't be processed by join(). "
[example3]
project="ExpressionEngine"
file="ExpressionEngine_Core2.9.2/system/expressionengine/libraries/simplepie/idn/idna_convert.class.php"
line="100"
code="if (function_exists('file_get_contents')) {
    $this->NP = unserialize(file_get_contents(dirname(__FILE__).'/npdata.ser'));
} else {
    $this->NP = unserialize(join('', file(dirname(__FILE__).'/npdata.ser')));
}";
explain="join('', ) is used as a replacement for file_get_contents(), which was introduced in PHP 4.3.0."
[example4]
project="PrestaShop"
file="classes/module/Module.php"
line="2972"
code="$override_file = file($override_path);

eval(preg_replace(array('#^\s*<\?(?:php)?#', '#class\s+'.$classname.'\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?#i'), array(' ', 'class '.$classname.'OverrideOriginal_remove'.$uniq), implode('', $override_file)));
$override_class = new ReflectionClass($classname.'OverrideOriginal_remove'.$uniq);

$module_file = file($this->getLocalPath().'override/'.$path);
eval(preg_replace(array('#^\s*<\?(?:php)?#', '#class\s+'.$classname.'(\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?)?#i'), array(' ', 'class '.$classname.'Override_remove'.$uniq), implode('', $module_file)));";
explain="implode('', ) is probably not the slowest part in these lines."
