name = "Unused Enumeration Case";
description = "Those are enumeration cases which are defined, yet not used.

<?php

enum x {
    case A;
    case C;
    
    const F = 1;
}

function foo(x $a) {}

foo(x::A);

?>

The error message when the case is missing mentions the class constant : this is because enumeration cases and class constants use the same configuration. They are only distinguished by their definition, which, here, does not exists.

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.0";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = "8.1+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "enum";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
related[] = "Enums/UndefinedEnumcase";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use the case in the code"
modifications[] = "Remove the case in the code"
modifications[] = "Fix the name of the case"
modifications[] = "Turn the case in a constant"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Undefined constant x::C"

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""
