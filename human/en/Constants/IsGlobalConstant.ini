name = "Is Global Constant";
description = "Mark a constant that may fallback to a global const definition, even though it is in a namespace. 

This analysis skips PHP and ext's functions, namespaced constants.";
code = "<?php

namespace X {

    const PHP_VERSION = 1;
    
    // Local constant
    echo PHP_VERSION; 
    
    // This constant fallsback to \E_ALL, unless DNS_NS is defined in this namespace
    echo E_ALL; 

    // This constant is always \DNS_NS
    echo \DNS_NS; 
    
    // This is a Notice
    echo UNDEFINED_CONSTANT;
}

?>";
clearphp = "";
severity = "S_NONE";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_NONE";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "constant";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`$GLOBALS <https://www.php.net/manual/en/reserved.variables.globals.php>`_";
seeAlso[] = "`Variable scope <https://www.php.net/manual/en/language.variables.scope.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

