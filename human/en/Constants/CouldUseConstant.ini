name = "Could Use Existing Constant";
description = "This rule reports literals that have the same value as a constant, and, as such, might be used as a constant, instead of a literal.

<?php

const A = 1;

$a = 1;

?>

Floats are not considered by this rule, for comparison reasons. Also, ``true``, ``false``, ``null``, 0 and 1 are also automatically excluded. 

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.5";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_MEDIUM";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
;phpVersion = "8.0+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "constant";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use the constant instead of the literal"
modifications[] = "Create a new constant for that literal"

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
; Duplicate and increment numbers to add more : parameter1, paramter2, etc. 
[parameter1]
name="omittedValues";
default="";
type="array";
description="Comma-separated list of values that have to be ignored with this analysis. They replace the default values of 0 and 1.";
