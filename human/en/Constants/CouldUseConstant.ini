name = "Could Use Existing Constant";
description = "This rule reports literals that have the same value as a constant, and, as such, might be used as a constant, instead of a literal.



Floats are not considered by this rule, for comparison reasons. Also, ``true``, ``false``, ``null``, 0 and 1 are also automatically excluded.";
code = "<?php

const A = 1;

$a = 1;

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.5";
precision = "P_MEDIUM";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Use the constant instead of the literal";
modifications[] = "Create a new constant for that literal";
; Alternative to make this code go away. 
; One by possible solution

features[] = "constant";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[parameter1]
name = "omittedValues";
default = "";
type = "array";
description = "Comma-separated list of values that have to be ignored with this analysis. They replace the default values of 0 and 1.";
