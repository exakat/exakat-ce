name = "Ambiguous Array Index";
description = "Indexes should not be defined with different types than int or string. 

Array indices only accept integers and strings, so any other type of literal is reported. In fact, ``null`` is turned into an empty string, booleans are turned into an integer, and real numbers are truncated (not rounded).

<?php

$x = [ 1  => 1,
      '1' => 2,
      1.0 => 3,
      true => 4];
// $x only contains one element : 1 => 4

// Still wrong, immediate typecast to 1
$x[1.0]  = 5; 
$x[true] = 6; 

?>

They are indeed distinct, but may lead to confusion. 

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision = "P_HIGH";
seeAlso[] = "`array <https://www.php.net/manual/en/language.types.array.php>`_";

features[] = "array"

phpErrors[] = ""

phpVersion = ""

rulesetBuild_title="Ambiguous Array Index"
rulesetBuild_code = "$x = [ 1  => 1,
      '1' => 2,
      1.0 => 3,
      true => 4]"

modifications[] = "Only use string or integer as key for an array. "
modifications[] = "Use transtyping operator (string) and (int) to make sure of the type"

[example1]
project="PrestaShop"
file="src/PrestaShopBundle/Install/Install.php"
line="532"
code="
        $list = array(
            'products' => _PS_PROD_IMG_DIR_,
            'categories' => _PS_CAT_IMG_DIR_,
            'manufacturers' => _PS_MANU_IMG_DIR_,
            'suppliers' => _PS_SUPP_IMG_DIR_,
            'stores' => _PS_STORE_IMG_DIR_,
            null => _PS_IMG_DIR_.'l/', // Little trick to copy images in img/l/ path with all types
        );";
explain="Null, as a key, is actually the empty string. "
[example2]
project="Mautic"
file="app/bundles/CoreBundle/Entity/CommonRepository.php"
line="314"
code="                foreach ($metadata->getAssociationMappings() as $field => $association) {
                    if (in_array($association['type'], [ClassMetadataInfo::ONE_TO_ONE, ClassMetadataInfo::MANY_TO_ONE])) {
                        $baseCols[true][$entityClass][]  = $association['joinColumns'][0]['name'];
                        $baseCols[false][$entityClass][] = $field;
                    }
                }
";
explain="True is turned into 1 (integer), and false is turned into 0 (integer). "
