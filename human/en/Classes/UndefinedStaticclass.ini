name = "Undefined ::class";
description = "``::class`` doesn't check if a corresponding class exists. 

``::class`` must be checked with a call to class_exists(). Otherwise, it may lead to a ``Class 'foo' not found`` or even silent dead code : this happens also with Catch and instanceof commands with undefined classes. PHP doesn't raise an error in that case.";
code = "<?php

class foo() {}

// prints foo
echo foo::class; 

// prints bar though bar doesn't exist.
echo bar::class;

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.3.5";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Create the missing class";
modifications[] = "Fix the name part of the syntax";
modifications[] = "Check the name part of syntax with class_exists()";
; Alternative to make this code go away. 
; One by possible solution

features[] = "class";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Class Constants <https://www.php.net/manual/en/language.oop5.constants.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "Class 'x' not found";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

