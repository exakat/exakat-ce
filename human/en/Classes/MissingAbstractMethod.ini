name = "Missing Abstract Method";
description = "Abstract methods must have a non-abstract version for the class to be complete. A class that is missing one abstract definition cannot be instantiated.

<?php

// This is a valid definition
class b extends a {
    function foo() {}
    function bar() {}
}

// This compiles, but will emit a fatal error if instantiated
class c extends a {
    function bar() {}
}

// This illustration lint but doesn't run.
// moving this class at the beginning of the code will make lint fail
abstract class a {
    abstract function foo() ;
}

?>

See also `Classes Abstraction <https://www.php.net/abstract>`_.

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.1.0";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Implement the missing methods"
modifications[] = "Remove the partially implemented class"
modifications[] = "Mark the partially implemented class abstract"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Class c contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (a::foo)"

; Optional parameters
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";

