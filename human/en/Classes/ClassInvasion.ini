name = "Class Invasion";
description = "Class invasion happens when an object access another object's private methods or properties. 

This is possible from the scope of the class itself. For example, an cloned object, or a parameter with the same type as the current class. 

Class invasion is a PHP feature. 

<?php

class x {
	private $p = 1;
	
	function foo(X $x) {
		// This is the normal access to private properties.
		$this->p = 3; 
		// This is class invasion, as $x is a distinct object.
		$x->p = 2;
	}
}

?>

This applies to properties, constants and methods, static or not. 

 ";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.1";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_MEDIUM";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "class-invasion";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = ""

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""
