name = "Cannot Be Readonly";
description = "This analysis reports different situations where a property is readonly, and has some impossible code. 

Two cases are reported : 
+ a self-updated property, where it is updated with a value that is created from itself. The most obvious is ``$this->a = $this->a;`` (which is reported as an error by PHP), and The most obvious is ``$this->a = foo($this->a);`` is the most common.
+ a property which is set in the constructor, yet has a distinct method where it is updated too. 

Most of thoses cases are dead code. 

";
code = "";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.6.1";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "readonly";
features[] = "dead code";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the impossible code"

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""
