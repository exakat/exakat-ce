name = "Missing Visibility";
description = "Class constants, properties and methods usage may be controlled by the visibility option. When omitted, it is by default public. 

When omitted, it should be added to make its configuration explicit. 

<?php

class x {
    // property is private
    private $property = 1;

    // This method is public, and should bear the 'public' option
    function foo() {}
}

?>
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.5";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
;phpVersion = "8.0+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "`Visibility <https://www.php.net/manual/en/language.oop5.visibility.php>`_";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "visibility";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
related[] = "Classes/AmbiguousVisibilities"

cobblers[] = "Classes/AddVisibility"

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Add the public visibility"
modifications[] = "Actually review the code and set a pragmatic visibility"
modifications[] = "Set the visibility to private and wait for a request of access"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
; Duplicate and increment numbers to add more : parameter1, paramter2, etc. 
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";

; Information for the ruleset Builder (https://www.exakat.io/en/ruleset_builder)
;rulesetBuild_title="Wrong Type Returned"
;rulesetBuild_code = "function foo() : string {
