name = "Property Invasion";
description = "Property invasion exports a reference from an object, for external and direct modifications. 

With a method that returns a reference, a link is created between an external variable and the private property. That way, it is possible to modify the object, without calling a property, or a method. 

<?php

class x {
	private $p = 1;
	
	function &get() {
		return $this->p;
	}
}

$x = new x;
$y = &$x->get();
$y = 2;

print $x->get(); // 2

?>
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.1";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_MEDIUM";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "object-invasion";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "`Invading private properties and methods in PHP <https://freek.dev/2192-invading-private-properties-and-methods-in-php>`_"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
; Duplicate and increment numbers to add more : parameter1, paramter2, etc. 
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";
