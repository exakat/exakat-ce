name = "Weak Typing";
description = "The variable's validation is not enough to allow for a sophisticated usage. For example, the variable is checked for null, then used as an object or an array.

<?php

if ($a !== null) {
    echo $a->b;
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "1.2.8";
precision = "P_VERY_HIGH"

seeAlso[] = "`From assumptions to assertions <https://rskuipers.com/entry/from-assumptions-to-assertions>`_"
phpErrors[] = ""
phpVersion = ""
features[] = "typehint"


modifications[] = "Use instanceof when checking for objects"
modifications[] = "Use is_array() when checking for arrays. Also consider is_string(), is_int(), etc."
modifications[] = "Use typehint when the variable is an argument"
[example1]
project="TeamPass"
file="includes/libraries/Tree/NestedTree/NestedTree.php"
line="100"
code="    public function getDescendants($id = 0, $includeSelf = false, $childrenOnly = false, $unique_id_list = false)
    {
        global $link;
        $idField = $this->fields['id'];

        $node = $this->getNode($id);
        if (is_null($node)) {
            $nleft = 0;
            $nright = 0;
            $parent_id = 0;
            $personal_folder = 0;
        } else {
            $nleft = $node->nleft;
            $nright = $node->nright;
            $parent_id = $node->$idField;
            $personal_folder = $node->personal_folder;
        }";
explain="The is_null() test detects a special situation, that requires usage of default values. The 'else' handles every other situations, including when the $node is an object, or anything else. $this->getNode() will gain from having typehints : it may be NULL, or the results of mysqli_fetch_object() : a stdClass object. The expected properties of nleft and nright are not certain to be available."
