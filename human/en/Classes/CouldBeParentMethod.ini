name = "Could Be Parent Method";
description = "A method is defined in several children, but not in a the parent class. It may be worth checking if this method doesn't belong the parent class, as an abstraction.

<?php

// The parent class
class x { }

// The children class
class y1 extends x {
    // foo is common to y1 and y2, so it shall be also a method in x
    function foo() {}
    // fooY1 is specific to y1
    function fooY1() {}
}

class y2 extends x {
    function foo() {}
    // fooY2 is specific to y1
    function fooY2() {}
}

?>

Only the name of the method is used is for gathering purposes. If the code has grown organically, the signature (default values, typehint, argument names) may have followed different path, and will require a refactorisation.

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.1.7";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Create an abstract method in the parent"
modifications[] = "Create an concrete method in the parent, and move default behavior there by removing it in children classes"

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""

; Optional parameters
[parameter1]
name="minChildren";
default="4";
type="integer";
description="Minimal number of children using this method.";
