name = "Could Be Abstract Class";
description = "An abstract class is never instantiated, and has children class that are. As such, a 'parent' class that is never instantiated by itself, but has its own children instantiated could be marked as abstract. 

That will prevent new code to try to instantiate it.

<?php

// Example code would actually be split over multiple files.


// That class could be abstract
class motherClass {}

// Those classes shouldn't be abstract
class firstChildren extends motherClass {}
class secondChildren extends motherClass {}
class thirdChildren extends motherClass {}

new firstChildren();
new secondChildren();
new thirdChildren();

//Not a single : new motherClass()

?>

See also `Class Abstraction <https://www.php.net/abstract>`_
         `Abstract classes and methods <https://phpenthusiast.com/object-oriented-php-tutorials/abstract-classes-and-methods>`_.
";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "1.3.9";
modifications[] = "Make this class an abstract class"
[example1]
project="Edusoho"
file="src/Biz/Task/Strategy/BaseStrategy.php"
line="14"
code="class BaseStrategy { 
    // Class code
}";
explain="BaseStrategy is extended by NormalStrategy, DefaultStrategy (Not shown here), but it is not instantiated itself."
[example2]
project="shopware"
file="engine/Shopware/Plugins/Default/Core/PaymentMethods/Components/GenericPaymentMethod.php"
line="31"
code="class GenericPaymentMethod extends BasePaymentMethod { 
    // More class code
}";
explain="A 'Generic' class sounds like a class that could be 'abstract'. "
