name = "Rewrote Final Class Constant";
description = "Final class constants can't be rewriten in a child class. 

It is possible to write code that lints, when the classes are in different files. Such overwrites will only be detected at execution time.

<?php

class x {
	final const A = 1;
	const B = 1;
}

class y extends x {
	const A = 1;
	const B = 1;
}

?>
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.4";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "final";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the final keyword"
modifications[] = "Remove the rewritten constant"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "cannot override final constant"

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""
