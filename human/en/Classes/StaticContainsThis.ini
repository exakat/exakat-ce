name = "Static Methods Can't Contain $this";
description = "Static methods are also called ``class methods`` : they may be called even if the class has no instantiated object. Thus, the local variable ``$this`` won't exist, PHP will set it to NULL as usual. 

<?php

class foo {
    // Static method may access other static methods, or property, or none. 
    static function staticBar() {
        // This is not possible in a static method
        return self::otherStaticBar() . static::$staticProperty;
    }

    static function bar() {
        // This is not possible in a static method
        return $this->property;
    }
}

?>

Either this is not a static method, which is fixed by removing the ``static`` keyword, or replace all $this mention by static properties ``Class::$property``.

See also `Static Keyword <https://www.php.net/manual/en/language.oop5.static.php>`_
";
clearphp = "no-static-this";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
modifications[] = "Remove any $this usage"
modifications[] = "Turn any $this usage into a static call : $this->foo() => self::foo()"

phpErrors[] = "Using $this when not in object context"

[example1]
project="xataface"
file="Dataface/LanguageTool.php"
line="48"
code="	public static function loadRealm($name){
		return self::getInstance($this->app->_conf['default_language'])->loadRealm($name);
	}
";
explain="$this is hidden in the arguments of the static call to the method."
[example2]
project="SugarCrm"
file="SugarCE-Full-6.5.26/modules/ACLActions/ACLAction.php"
line="332"
code="    static function hasAccess($is_owner=false, $access = 0){

        if($access != 0 && $access == ACL_ALLOW_ALL || ($is_owner && $access == ACL_ALLOW_OWNER))return true;
       //if this exists, then this function is not static, so check the aclaccess parameter
        if(isset($this) && isset($this->aclaccess)){
            if($this->aclaccess == ACL_ALLOW_ALL || ($is_owner && $this->aclaccess == ACL_ALLOW_OWNER))
            return true;
        }
        return false;
    }
";
explain="Notice how $this is tested for existence before using it. It seems strange, at first, but we have to remember that if $this is never set when calling a static method, a static method may be called with $this. Confusingly, this static method may be called in two ways. "
