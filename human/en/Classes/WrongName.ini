name = "Illegal Name For Method";
description = "PHP has reserved usage of methods starting with ``__`` for magic methods. It is recommended to avoid using this prefix, to prevent confusions.";
code = "<?php

class foo{
    // Constructor
    function __construct() {}

    // Constructor's typo
    function __constructor() {}

    // Illegal function name, even as private
    private function __bar() {}
}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.9.2";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Avoid method names starting with a double underscore : ``__``";
modifications[] = "Use method visibilities to ensure that methods are only available to the current class or its children";
; Alternative to make this code go away. 
; One by possible solution

features[] = "method";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Magic Methods <https://www.php.net/manual/en/language.oop5.magic.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

[example1]
project = "PrestaShop";
file = "admin-dev/ajaxfilemanager/inc/class.pagination.php";
line = "200";
code = "	/**
	 * get base url for pagination links aftr excluded those key
	 * identified on excluded query strings
	 *
	 */
	function __getBaseUrl()
	{

		if(empty($this->baseUrl))
		{

			$this->__setBaseUrl();
		}
		return $this->baseUrl;
	}
";
explain = "__getBaseUrl and __setBaseUrl shouldn't be named like that. ";

[example2]
project = "Magento";
file = "app/code/core/Mage/Core/Block/Abstract.php";
line = "1139";
code = "    public function __()
    {
        $args = func_get_args();
        $expr = new Mage_Core_Model_Translate_Expr(array_shift($args), $this->getModuleName());
        array_unshift($args, $expr);
        return $this->_getApp()->getTranslator()->translate($args);
    }

";
explain = "public method, called '__'. Example : $this->__();";
