name = "Forgotten Visibility";
description = "Some classes elements (property, method, constant) are missing their explicit visibility.

By default, it is public. It should at least be mentioned as public, or may be reviewed as protected or private. 

Class constants support also visibility since PHP 7.1.

final, static and abstract are not counted as visibility. Only public, private and protected. The PHP 4 var keyword is counted as undefined.

Traits, classes and interfaces are checked. 

<?php

// Explicit visibility
class X {
    protected sconst NO_VISIBILITY_CONST = 1; // For PHP 7.2 and later

    private $noVisibilityProperty = 2; 
    
    public function Method() {}
}

// Missing visibility
class X {
    const NO_VISIBILITY_CONST = 1; // For PHP 7.2 and later

    var $noVisibilityProperty = 2; // Only with var
    
    function NoVisibilityForMethod() {}
}

?>

";
clearphp = "always-have-visibility";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";

precision = "P_VERY_HIGH"

seeAlso[] = "`Visibility <https://www.php.net/manual/en/language.oop5.visibility.php>`_"
seeAlso[] = "`Understanding The Concept Of Visibility In Object Oriented PHP <https://torquemag.io/2016/05/understanding-concept-visibility-object-oriented-php/>`_"

modifications[] = "Always add explicit visibility to methods and constants in a class";
modifications[] = "Always add explicit visibility to properties in a class, after PHP 7.4";

phpErrors[] = ""

phpVersion  = ""

features[] = "visibility"

[example1]
project="FuelCMS"
file="/fuel/modules/fuel/controllers/Module.php"
line="713"
code="class Module extends Fuel_base_controller {
	
	// --------------------------------------------------------------------
	
	/**
	 * Displays the list (table) view
	 *
	 * @access	public
	 * @return	void
	 */	
	function index()
	{
		$this->items();
	}";
explain="Missing visibility for the index() method,and all the methods in the Module class."


[example2]
project="LiveZilla"
file="livezilla/_lib/objects.global.users.inc.php"
line="2516"
code="class Visitor extends BaseUser 
{
// Lots of code

    static function CreateSPAMFilter($_userId,$_base64=true)
    {
        if(!empty(Server::$Configuration->File["gl_sfa"]))
        {
";
explain="Static method that could be public."

