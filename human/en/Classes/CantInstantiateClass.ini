name = "Cant Instantiate Class";
description = "When constructor is not public, it is not possible to instantiate such a class. Either this is a conception choice, or there are factories to handle that. Either way, it is not possible to call new on such class. 

PHP reports an error similar to this one : 'Call to private Y::__construct() from invalid context'.

<?php

//This is the way to go
$x = X::factory();

//This is not possible
$x = new X();

class X {
    //This is also the case with proctected __construct
    private function __construct() {}

    static public function factory() {
        return new X();
    }
}

?>

See also `In a PHP5 class, when does a private constructor get called? <https://stackoverflow.com/questions/26079/in-a-php5-class-when-does-a-private-constructor-get-called>`_,
         `Named Constructors in PHP <http://verraes.net/2014/06/named-constructors-in-php/>`_ and 
         `PHP Constructor Best Practices And The Prototype Pattern <http://ralphschindler.com/2012/03/09/php-constructor-best-practices-and-the-prototype-pattern>`_.
";
clearphp = "";
severity = "S_CRITICAL";
timetofix = "T_QUICK";
exakatSince = "1.2.8";

phpErrors[] = "Call to private Y::__construct() from invalid context";

[example1]
project="WordPress"
file="wp-admin/includes/misc.php"
line="74"
code="$markerdata = explode( \"\n\", implode( '', file( $filename ) ) );";
explain="This code actually loads the file, join it, then split it again. file() would be sufficient. "
