name = "self, parent, static Outside Class";
description = "self, parent and static should be called inside a class or trait. PHP lint won't report those situations. 

self, parent and static may be used in a trait : their actual value will be only known at execution time, when the trait is used.



Such syntax problem is only revealed at execution time : PHP raises a Fatal error. 

The origin of the problem is usually a method that was moved outside a class, at least temporarily. 

Closures and arrow functions are reported here, though they might be rebound with a valid context before execution.";
code = "<?php
// In the examples, self, parent and static may be used interchangeably

// This raises a Fatal error
//Fatal error: Uncaught Error: Cannot access static:: when no class scope is active
new static();

// static calls
echo self::CONSTANTE;
echo self::$property;
echo self::method();

// as a type hint
function foo(static $x) {
    doSomething();
}

// as a instanceof
if ($x instanceof static) {
    doSomething();
}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.10.3";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Remove the call to static, parent or self";
modifications[] = "Make sure the closure is correctly binded before usage";
; Alternative to make this code go away. 
; One by possible solution

features[] = "self";
features[] = "parent";
features[] = "static";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Scope Resolution Operator (::) <https://www.php.net/manual/en/language.oop5.paamayim-nekudotayim.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "Cannot access static:: when no class scope is active";
phpErrors[] = "Cannot use \"parent\" when no class scope is active";
phpErrors[] = "Cannot use \"static\" when no class scope is active";
phpErrors[] = "Cannot use \"self\" when no class scope is active";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

