name = "Unresolved Instanceof";
description = "The instanceof operator doesn't confirm if the compared class exists. 

It checks if an variable is of a specific class. However, if the referenced class doesn't exist, because of a bug, a missed inclusion or a typo, the operator always fails, without a warning. 

<?php

namespace X {
    class C {}
    
    // This is OK, as C is defined in X
    if ($o instanceof C) { }

    // This is not OK, as C is not defined in global
    // instanceof respects namespaces and use expressions
    if ($o instanceof \C) { }

    // This is not OK, as undefinedClass
    if ($o instanceof undefinedClass) { }

    // This is not OK, as $class is now a full namespace. It actually refers to \c, which doesn't exist
    $class = 'C';
    if ($o instanceof $class) { }
}
?>

Make sure the following classes are well defined.

";
clearphp = "no-unresolved-instanceof";
severity = "S_MAJOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";

features[] = "instanceof"

seeAlso[] = "`Instanceof <https://www.php.net/manual/en/language.operators.type.php>`_"

phpErrors[] = ""

phpVersion = ""

modifications[] = "Remove the call to instanceof and all its dependencies.";
modifications[] = "Fix the class name and use a class existing in the project.";

[example1]
project="WordPress"
file="wp-admin/includes/misc.php"
line="74"
code="    private function resolveTag($match)
    {
        $tagReflector = $this->createLinkOrSeeTagFromRegexMatch($match);
        if (!$tagReflector instanceof Tag\SeeTag && !$tagReflector instanceof Tag\LinkTag) {
            return $match;
        }

";
explain="This code actually loads the file, join it, then split it again. file() would be sufficient. "


