name = "Unused Private Properties";
description = "Unused static properties should be removed. 

Unused private properties are dead code. They are usually leftovers of development or refactorisation : they used to have a mission, but are now left. 

Being private, those properties are only accessible to the current class or trait. As such, validating the";
code = "<?php

class foo {
    // This is a used property (see bar method)
    private $used = 1;

    // This is an unused property
    private $unused = 2;
    
    function bar($a) {
        $this->used += $a;
        
        return $this->used;
    }
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Remove the property altogether";
modifications[] = "Check if the property wasn't forgotten in the rest of the class";
modifications[] = "Check if the property is correctly named";
modifications[] = "Change the visibility to protected or public : may be a visibility refactoring was too harsh";
; Alternative to make this code go away. 
; One by possible solution

features[] = "unused";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

[example1]
project = "OpenEMR";
file = "entities/User.php";
line = "46";
code = "
class User
{
    /**
     * @Column(name=""id"", type=""integer"")
     * @GeneratedValue(strategy=""AUTO"")
     */
    private $id;

    /**
     * @OneToMany(targetEntity=""ONote"", mappedBy=""user"")
     */
    private $oNotes;

";
explain = "This class has a long list of private properties. It also has an equally long (minus one) list of accessors, and a __toString() method which exposes all of them. $oNotes is the only one never mentionned anywhere. ";

[example2]
project = "phpadsnew";
file = "lib/OA/Admin/UI/component/Form.php";
line = "23";
code = "
class OA_Admin_UI_Component_Form
    extends HTML_QuickForm
{
    private $dispatcher;
";
explain = "$dispatcher is never used anywhere. ";
