name = "Unused Private Properties";
description = "Unused static properties should be removed. 

Unused private properties are dead code. They are usually leftovers of development or refactorisation : they used to have a mission, but are now left. 

Being private, those properties are only accessible to the current class or trait. As such, validating the 

<?php

class foo {
    // This is a used property (see bar method)
    private $used = 1;

    // This is an unused property
    private $unused = 2;
    
    function bar($a) {
        $this->used += $a;
        
        return $this->used;
    }
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
modifications[] = "Remove the property altogether";
modifications[] = "Check if the property wasn't forgotten in the rest of the class";
modifications[] = "Check if the property is correctly named";
modifications[] = "Change the visibility to protected or public : may be a visibility refactoring was too harsh";
[example1]
project="OpenEMR"
file="entities/User.php"
line="46"
code="
class User
{
    /**
     * @Column(name=""id"", type=""integer"")
     * @GeneratedValue(strategy=""AUTO"")
     */
    private $id;

    /**
     * @OneToMany(targetEntity=""ONote"", mappedBy=""user"")
     */
    private $oNotes;

";
explain="This class has a long list of private properties. It also has an equally long (minus one) list of accessors, and a __toString() method which exposes all of them. $oNotes is the only one never mentionned anywhere. "
[example2]
project="phpadsnew"
file="lib/OA/Admin/UI/component/Form.php"
line="23"
code="
class OA_Admin_UI_Component_Form
    extends HTML_QuickForm
{
    private $dispatcher;
";
explain="$dispatcher is never used anywhere. "
