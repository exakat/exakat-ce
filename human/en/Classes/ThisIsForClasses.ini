name = "$this Belongs To Classes Or Traits";
description = "The pseudo-variable $this must be used inside a class or trait, or bound closures. 

$this variable represents the current object, inside a class or trait scope

It is a pseudo-variable, and should be used within class's or trait's methods and not outside. It should also not be used in static methods.

PHP 7.1 is stricter and check for $this at several situations. 

<?php

// as an argument
function foo($this) {
    // Using global
    global $this;
    // Using static (not a property)
    static $this;
    
    // Can't unset it
    unset($this);
    
    try {
        // inside a foreach
        foreach($a as $this) {  }
        foreach($a as $this => $b) {  }
        foreach($a as $b => $this) {  }
    } catch (Exception $this) {
        // inside a catch
    }
    
    // with Variable Variable
    $a = this;
    $$a = 42;
}

class foo {
    function bar() {
        // Using references
        $a =& $this;
        $a = 42;
        
        // Using extract(), parse_str() or similar functions
        extract([this => 42]);  // throw new Error(Cannot re-assign $this)
        var_dump($this);
    }

    static function __call($name, $args) {
        // Using __call
        var_dump($this); // prints object(C)#1 (0) {}, php-7.0 printed NULL
        $this->test();   // prints ops
    }

}
?>

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision = "P_VERY_HIGH"
phpVersion = "";

features[] = "$this"
features[] = "self"
features[] = "parent"
features[] = "static"

seeAlso[] = "`class <https://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.class>`_"

phpErrors[] = "Using $this when not in object context"

modifications[] = "Do not use `$this` as a variable name, except for the current object, in a class, trait or closure."

[example1]
project="OpenEMR"
file="ccr/display.php"
line="24"
code="<?php 
require_once(dirname(__FILE__) . \"/../interface/globals.php\");

$type = $_GET['type'];
$document_id = $_GET['doc_id'];
$d = new Document($document_id);
$url =  $d->get_url();
$storagemethod = $d->get_storagemethod();
$couch_docid = $d->get_couch_docid();
$couch_revid = $d->get_couch_revid();

if ($couch_docid && $couch_revid) {
    $couch = new CouchDB();
    $data = array($GLOBALS['couchdb_dbase'],$couch_docid);
    $resp = $couch->retrieve_doc($data);
    $xml = base64_decode($resp->data);
    if ($content=='' && $GLOBALS['couchdb_log']==1) {
        $log_content = date('Y-m-d H:i:s').\" ==> Retrieving document\r\n\";
        $log_content = date('Y-m-d H:i:s').\" ==> URL: \".$url.\"\r\n\";
        $log_content .= date('Y-m-d H:i:s').\" ==> CouchDB Document Id: \".$couch_docid.\"\r\n\";
        $log_content .= date('Y-m-d H:i:s').\" ==> CouchDB Revision Id: \".$couch_revid.\"\r\n\";
        $log_content .= date('Y-m-d H:i:s').\" ==> Failed to fetch document content from CouchDB.\r\n\";
        //$log_content .= date('Y-m-d H:i:s').\" ==> Will try to download file from HardDisk if exists.\r\n\r\n\";
        $this->document_upload_download_log($d->get_foreign_id(), $log_content);
        die(xlt(\"File retrieval from CouchDB failed\"));
    }
";
explain="$this is used to call the document_upload_download_log() method, although this piece of code is not part of a class, nor is included in a class."

