name = "Never Used Properties";
description = "Properties that are never used. They are defined in a class or a trait, but they never actually used.

Properties are considered used when they are used locally, in the same class as their definition, or in a parent class : a parent class is always included with the current class. 

On the other hand, properties which are defined in a class, but only used in children classes is considered unused, since children may also avoid using it. 

<?php

class foo {
    public $usedProperty = 1;

    // Never used anywhere
    public $unusedProperty = 2;
    
    function bar() {
        // Used internally
        ++$this->usedProperty;
    }
}

class foo2  extends foo {
    function bar2() {
        // Used in child class
        ++$this->usedProperty;
    }
}

// Used externally
++$this->usedProperty;

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_SLOW";
exakatSince = "0.8.4";
precision = "P_HIGH"

features[] = "property"

phpVersion = ""

phpErrors[] = ""

seeAlso[] = ""

modifications[] = "Drop unused properties";
modifications[] = "Change the name of the unused properties";
modifications[] = "Move the properties to children classes";
modifications[] = "Find usage for unused properties";

[example1]
project="WordPress"
file="wp-admin/includes/misc.php"
line="74"
code="$markerdata = explode( \"\\n\", implode( '', file( $filename ) ) );";
explain="This code actually loads the file, join it, then split it again. file() would be sufficient. "
