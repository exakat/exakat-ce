name = "Untyped No Default Properties";
description = "This rule reports untyped properties without default value, that are not assigned at constructor time. 

This means that these properties will be assigned later, and are now running the risk to be accessed before being written. This yields a warning, and, when the property get typed, event with ``mixed``, a fatal error.";
code = "<?php

class x {
	public $noTypeNoDefaultNoConstructor;
	public $noTypeNoDefaultButConstructor;
	
	function __construct() {
		// property is defined in the constructor, so always defined
		$this->noTypeNoDefaultButConstructor = 1;
	}
	
	function foo()  {
		// possible error here
		return $this->noTypeNoDefaultNoConstructor;
	}
}
?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.6.2";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "";
; Alternative to make this code go away. 
; One by possible solution

features[] = "property";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "Typed property x::$p2 must not be accessed before initialization";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary
