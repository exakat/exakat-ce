name = "Inherited Property Type Must Match";
description = "Properties that are inherited between classes must match. 

This affect public and protected properties. Private properties are immune to this rule, as they actually are distinct properties.

<?php

class A {
    private A $a;
    protected array $b;
    public $c;
}

class B extends A {
    private A $a;       // OK, as it is private
    protected int $b;   // type must match with the previous definition
    public $c;          // no type behaves just like a type : it must match too.
}

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.2.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
;phpVersion = "8.0+"

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

seeAlso[] = "`Properties <https://www.php.net/manual/en/language.oop5.properties.php>`_"

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the definition in the child class"
modifications[] = "Synchronize the definition of the property in the child class"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Type of b::$a must not be defined (as in class a)"
phpErrors[] = "Type of b::$a must be array (as in class a)"

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";

; Information for the ruleset Builder (https://www.exakat.io/en/ruleset_builder)
;rulesetBuild_title="Wrong Type Returned"
;rulesetBuild_code = "function foo() : string {
