name = "Non Nullable Getters";
description = "A getter needs to be nullable when a property is injected. 

In particular, if the injection happens with a separate method, there is a time where the object is not consistent, and the property holds a default non-object value.

<?php

class Consistent {
    private $db = null;
    
    function __construct(Db $db) { 
        $this->db = $db;
        // Object is immediately consistent 
    }
    
    // Db might be null
    function getDb() {
        return $this->db;
    }
}

class Inconsistent {
    private $db = null;
    
    function __construct() { 
        // No initialisation
    }

    // This might be called on time, or not
    // This typehint cannot be nullable, nor use null as default 
    function setDb(DB $db) {
        return $this->db;
    }

    // Db might be null
    function getDb() {
        return $this->db;
    }
}
?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.9.6";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the nullable option and the tests on ``null``."

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""
