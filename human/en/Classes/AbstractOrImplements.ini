name = "Abstract Or Implements";
description = "A class must implements all abstract methods of it parents, or be abstract too. 

PHP detect such error when all classes are loaded: in a code source where classes are split by files, such error it won't be detected until execution, where PHP stops with a Fatal Error : ``Class BA contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (A::aFoo)``.";
code = "<?php

abstract class Foo { 
    abstract function FooBar();
}

// This is in another file : php -l would detect it right away

class FooFoo extends Foo { 
    // The method is not defined. 
    // The class must be abstract, just like Foo
}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.3.3";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Implements all the abstract methods of the class";
modifications[] = "Make the class abstract";
; Alternative to make this code go away. 
; One by possible solution

features[] = "abstract";
features[] = "implements";
features[] = "lazy-loading";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Class Abstraction <https://www.php.net/abstract>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "Class BA contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (A::aFoo)";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Zurmo";
file = "app/protected/extensions/zurmoinc/framework/views/MassEditProgressView.php";
line = "30";
code = "class MassEditProgressView extends ProgressView { 
    /**/ 
}";
explain = "The class MassEditProgressView extends ProgressView, which is an abstract class. That class defines one abstract method : abstract protected function headerLabelPrefixContent(). Yet, the class MassEditProgressView doesn't implements this method. This means that the class can't be instatiated, and indeed, it isn't. The class MassEditProgressView is subclassed, by the class MarketingListMembersMassSubscribeProgressView, which implements the method headerLabelPrefixContent(). As such, MassEditProgressView should be marked abstract, so as to prevent any instantiation attempt. ";
