name = "Final Private Methods";
description = "PHP's private methods cannot be overwritten, as they are dedicated to the current class. That way, the ``final`` keyword is useless. 

PHP 8.0 warns when it finds such a method.

<?php

class foo {
    // Final and private both prevent child classes to overwrite the method
    final private function bar() {}

    // Final and protected (or public) keep this method available, but not overwritable
    final protected function bar() {}
}

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.2.0";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";

phpDeprecation = '8.0-';

seeAlso[] = "`Final Keyword <https://www.php.net/manual/en/language.oop5.final.php>`_";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the final keyword"
modifications[] = "Relax visibility"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Private methods cannot be final as they are never overridden by other classes"

features[] = "final"

phpVersion = ""