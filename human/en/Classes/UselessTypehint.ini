name = "Useless Typehint";
description = "__get() and __set() magic methods won't enforce any typehint. The name of the magic property is always cast to string.

__call() 

<?php

class x {
    // typehint is set and ignored
    function __set(float $name, string $value) {
        $this->$name = $value;
    }

    // typehint is set and ignored
    function __get(integer $name) {
        $this->$name = $value;
    }

    // typehint is checked by PHP 8.0 linting
    // typehint is enforced by PHP 7.x
    function __call(integer $name) {
        $this->$name = $value;
    }
}

$o = new x;
$b = array();
// Property will be called 'Array'
$o->{$b} = 2;

// type of $m is check at calling time. It must be string.
$o->{$m}();

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.1.9";
precision = "P_VERY_HIGH"

seeAlso[] = "`__set <https://www.php.net/manual/en/language.oop5.overloading.php#object.set>`_"

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use `string` for the `$name` parameter"
modifications[] = "Use no typehint for the `$name` parameter"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Method name must be a string"
