name = "Use ::Class Operator";
description = "Use ``::class`` to hardcode class names, instead of strings.

This is actually faster than strings, which are parsed at execution time, while ``::class`` is compiled, making it faster to execute. 

``::class`` operator is also able to handle use expressions, including aliases and local namespace. The code is easier to maintain. For example, the target class's namespace may be renamed, without changing the ``::class``, while the string must be updated.

``::class`` operator works with ``self`` and ``static``keywords. 
This is not possible when building the name of the class with concatenation.

This is a micro-optimization. This also helps static analysis, as it gives more information at compile time to analyse.";
code = "<?php

namespace foo\bar;

use foo\bar\X as B;

class X {}

$className = '\foo\bar\X';

$className = foo\bar\X::class;

$className = B\X;

$object = new $className;

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_INSTANT";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.7";
precision = "P_MEDIUM";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Replace strings by the ::class operator whenever possible";
; Alternative to make this code go away. 
; One by possible solution

features[] = "class-operator";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`::class <https://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.class.class>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Typo3";
file = "typo3/sysext/install/Configuration/ExtensionScanner/Php/ConstructorArgumentMatcher.php";
line = "4";
code = "return [
    'TYPO3\CMS\Core\Package\PackageManager' => [
        'required' => [
            'numberOfMandatoryArguments' => 1,
            'maximumNumberOfArguments' => 1,

";
explain = "``TYPO3\CMS\Core\Package\PackageManager`` could be ``TYPO3\CMS\Core\Package\PackageManager::class``. ";
