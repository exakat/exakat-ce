name = "Class Overreach";
description = "An object of class A may reach any private or protected properties, constants or methods in another object of the same class. This is a PHP feature, though seldom known.

This feature is also called class invasion.

<?php

class A {
    private $p = 1;
    
    public function foo(A $a) {
        return $a->p + 1;
    }
}

echo (new A)->foo(new A);

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.2.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_MEDIUM";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use a getter to reach inside the other object private properties"

features[] = "visibility"
features[] = "class-invasion"

seeAlso[] = "`Visibility from other objects <https://www.php.net/manual/en/language.oop5.visibility.php#language.oop5.visibility-other-objects>`_"
seeAlso[] = "`spatie/invade <https://github.com/spatie/invade>`_"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

; Human readable keywords for manual glossary
keywords[] = "PHP"
keywords[] = "visibility"
