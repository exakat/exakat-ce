name = "Could Be Abstract Method";
description = "A method can be made abstract, when all the class's children implement it. 

Since the method will also loose its body, it should not be refered in any calls. 

<?php

class a {
	function foo() {}

	function bar() {}
}

// * for several distinct names 
class a* extends a {
	function foo() {}
}

// a0 only creates foo(), not bar.
class a0 extends a {
	function foo() {}
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.9";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "abstract";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Add the abstract keyword"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""
