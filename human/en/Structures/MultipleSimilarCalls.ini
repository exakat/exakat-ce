name = "Multiple Similar Calls";
description = "Several calls are made to functions or methods in a row. They may have different arguments, though having a lot of similar calls in a row may indicate that a loop is needed. 

<?php

echo $a[1];
echo $a[2];
echo $a[3];
echo $a[4];
echo $a[5];

// This could be 
foreach($a as $v) {
    echo $v;
}

if (isset($a) && isset($b) && isset($c) && isset($d)) { }

// This could be coded as
if (isset($a, $b, $c, $d)) { }

?>

Sometimes, some native PHP functions use an arbitrary number of arguments to avoid multiple calls to the same function.

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.5";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
;phpVersion = "8.0+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
;seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
;features[] = "7.4";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Move the calls to a loop"
modifications[] = "Tactically use one call to a function with multiple arguments. For example, isset() with multiple arguments."

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
; Duplicate and increment numbers to add more : parameter1, paramter2, etc. 
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";

; Information for the ruleset Builder (https://www.exakat.io/en/ruleset_builder)
;rulesetBuild_title="Wrong Type Returned"
;rulesetBuild_code = "function foo() : string {
