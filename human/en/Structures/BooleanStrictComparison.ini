name = "Strict Comparison With Booleans";
description = "Strict comparisons prevent mistaking an error with a false. 

Boolean values may be easily mistaken with other values, especially when the function may return integer or boolean as a normal course of action. 

It is encouraged to use strict comparison === or !== when booleans are involved in a comparison.
switch() structures always uses `==` comparisons. Since PHP 8.0, it is possible to use match() to have strict comparisons. This is not reported by this analysis, as every switch should be refactored. 

Native functions in_array(), array_keys() and array_search() have a third parameter to make it use strict comparisons.";
code = "<?php

// distinguish between : $b isn't in $a, and, $b is at the beginning of $a 
if (strpos($a, $b) === 0) {
    doSomething();
}

// DOES NOT distinguish between : $b isn't in $a, and, $b is at the beginning of $a 
if (strpos($a, $b)) {
    doSomething();
}

// will NOT mistake 1 and true
$a = array(0, 1, 2, true);
if (in_array($a, true, true)) {
    doSomething();
}

// will mistake 1 and true
$a = array(0, 1, 2, true);
if (in_array($a, true)) {
    doSomething();
}

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Use strict comparison whenever possible";
; Alternative to make this code go away. 
; One by possible solution

features[] = "strict-comparison";
features[] = "switch";
features[] = "match";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Phinx";
file = "src/Phinx/Db/Adapter/MysqlAdapter.php";
line = "1131";
code = "$column->isNull( ) == false";
explain = "`Ã¬sNull( )`` always returns a boolean : it may be only be ``true`` or ``false``. Until typed properties or return type are used, isNull() may return anything else. ";

[example2]
project = "Typo3";
file = "typo3/sysext/lowlevel/Classes/Command/FilesWithMultipleReferencesCommand.php";
line = "90";
code = "$input->getOption('dry-run') != false";
explain = "When ``dry-run`` is not defined, the getOption() method actually returns a ``null`` value. So, comparing the result of getOption() to false is actually wrong : using a constant to prevent values to be inconsistent is recommended here.";
