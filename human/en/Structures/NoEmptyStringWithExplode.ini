name = "No Empty String With explode()";
description = "explode() doesn't allow empty strings as separator. Until PHP 8.0, it would make a warning, and return false. After that version, it raises a ValueError.

To break a string into individual characters, it is possible to use the array notation on strings, or to use the str_split() function. 

<?php

explode('', "a");

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Check for empty strings (or equivalent) before using explode()"
modifications[] = "Use the array notation to access individual chars"
modifications[] = "Use str_split() to break the string into an array"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Empty delimiter"
phpErrors[] = "explode(): Argument #1 ($separator) cannot be empty"

; Human readable keywords for manual glossary
;keywords[] = ""

changedBehavior = "8.0"

; manual index for Sphinx index building
;index[] = ""
