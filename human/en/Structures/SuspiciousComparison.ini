name = "Suspicious Comparison";
description = "The comparison seems to be misplaced.

A comparison happens in the last argument, while the actual function expect another type : this may be the case of a badly placed parenthesis.

<?php

// trim expect a string, a boolean is given.
if (trim($str === '')){

}

// Just move the first closing parenthesis to give back its actual meaning
if (trim($str) === ''){

}

?>

Original idea by `Vladimir Reznichenko <https://twitter.com/kalessil>`_. 

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_INSTANT";
exakatSince = "0.11.0";
modifications[] = "Remove the comparison altogether";
modifications[] = "Move the comparison to its right place : that, or more the parenthesis.";
modifications[] = "This may be what is intended : just leave it.";
[example1]
project="PhpIPAM"
file="app/tools/vrf/index.php"
line="110"
code="$subnet['description'] = strlen($subnet['description']==0) ? \"/\" : $subnet['description'];";
explain="if $subnet['description'] is a string, the comparison with 0 turn it into a boolean. false's length is 0, and true length is 1. PHP saves the day."
[example2]
project="ExpressionEngine"
file="ExpressionEngine_Core2.9.2/system/expressionengine/libraries/simplepie/SimplePie/Misc.php"
line="1925"
code="		if (isset($attribs['']['mode']) && strtolower(trim($attribs['']['mode']) === 'base64'))";
explain="If trim($attribs['']['mode']) === 'base64', then it is set to lowercase (although it is already), and added to the && logical test. If it is 'BASE64', this fails."
