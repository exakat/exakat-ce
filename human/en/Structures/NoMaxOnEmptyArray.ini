name = "No Max On Empty Array";
description = "Using max() or min() on an empty array leads to a ``valueError`` exception.

Until PHP 8, max() and min() would return null in case of empty array. This might be confusing with actual values, as an array can contain ``null``. ``null`` has a specific behavior when comparing with other values, and should be avoided with max() and sorts. 

<?php

// Throws a value error
$a = max([]);

$array = [];
if (empty($array)) {
	$a = null;
} else {
	$a = max($array);
}


var_dump(min([-1,  null])); // NULL
var_dump(max([-1,  null])); // -1
var_dump(max([1,  null]));  // 1

?>

Until PHP 8.0, a call on an empty array would return null, and a warning. 

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Check the content of the array before giving it to max() or min()"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Argument #1 ($value) must contain at least one element"

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

changedBehavior = "8.0"