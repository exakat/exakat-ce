name = "Eval() Usage";
description = "Using eval() is evil. 

Using eval() is bad for performances (compilation time), for caches (it won't be compiled), and for security (if it includes external data).
Most of the time, it is possible to replace the code by some standard PHP, like variable variable for accessing a variable for which you have the name.
At worse, including a pregenerated file is faster and cacheable. 

There are several situations where eval() is actually the only solution : 

For PHP 7.0 and later, it is important to put eval() in a try..catch expression.";
code = "<?php
    // Avoid using incoming data to build the eval() expression : any filtering error leads to PHP injection
    $mathExpression = $_GET['mathExpression']; 
    $mathExpression = preg_replace('#[^0-9+-*/(/)]#is', '', $mathExpression); // expecting 1+2
    $literalCode = '$a = '.$mathExpression.';';
    eval($literalCode);
    echo $a;

    // If the code code given to eval() is known at compile time, it is best to put it inline
    $literalCode = 'phpinfo();';
    eval($literalCode);

?>";
clearphp = "no-eval";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Use a dynamic feature of PHP to replace the dynamic code";
modifications[] = "Store the code on the disk, and use include";
modifications[] = "Replace create_function() with a closure!";
; Alternative to make this code go away. 
; One by possible solution

features[] = "eval";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`eval <http://www.php.net/eval>`_";
seeAlso[] = "`The Land Where PHP  Uses eval() <https://www.exakat.io/land-where-php-uses-eval/>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "XOOPS";
file = "htdocs/modules/system/class/block.php";
line = "266";
code = "                    ob_start();
                    echo eval($this->getVar('content', 'n'));
                    $content = ob_get_contents();
                    ob_end_clean();
";
explain = "eval() execute code that was arbitrarily stored in $this, in one of the properties. Then, it is sent to output, but collected before reaching the browser, and put again in $content. May be the echo/ob_get_contents() could have been skipped.";

[example2]
project = "Mautic";
file = "app/bundles/InstallBundle/Configurator/Step/CheckStep.php";
line = "238";
code = "create_function('$cfgValue', 'return $cfgValue > 100;')";
explain = "create_function() is actually an eval() in disguise : replace it with a closure for code modernization";
