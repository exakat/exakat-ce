name = "Altering Foreach Without Reference";
description = "Foreach() loop that should use a reference. 

When using a foreach loop that modifies the original source, it is recommended to use referenced variables, rather than access the original value with $source[$index]. 

Using references is then must faster, and easier to read. 

<?php

// Using references in foreach
foreach($source as $key => &$value) {
    $value = newValue($value, $key);
}

// Avoid foreach : use array_map
$source = array_walk($source, 'newValue');
    // Here, $key MUST be the second argument or newValue

// Slow version to update the array
foreach($source as $key => &$value) {
    $source[$key] = newValue($value, $key);
}
?>

You may also use array_walk() or array_map() (when $key is not used) to avoid the use of foreach.

See also `foreach <https://www.php.net/manual/en/control-structures.foreach.php>`_.";
clearphp = "use-reference-to-alter-in-foreach";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
modifications[] = "Add the reference on the modified blind variable, and avoid accessing the source array"
[example1]
project="Contao"
file="core-bundle/src/Resources/contao/classes/Theme.php"
line="613"
code="								foreach ($tmp as $kk=>$vv)
								{
									// Do not use the FilesModel here â€“ tables are locked!
									$objFile = $this->Database->prepare(""SELECT uuid FROM tl_files WHERE path=?"")
															  ->limit(1)
															  ->execute($this->customizeUploadPath($vv));

									$tmp[$kk] = $objFile->uuid;
								}
";
explain="$tmp[$kk] is &$vv."
[example2]
project="WordPress"
file="wp-admin/includes/misc.php"
line="74"
code="                foreach($ids as $index => $rrid)
                {
                    if($rrid == $this->Id)
                    {
                        $ids[$index] = $_id;
                        $write = true;
                        break;
                    }
                }
";
explain="$ids[$index] is &$rrid. "
