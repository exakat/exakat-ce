name = "Unpreprocessed Values";
description = "Preprocessing values is the preparation of values before PHP executes the code. 

There is no macro language in PHP, that prepares the code before compilation, bringing some comfort and short syntax. Most of the time, one uses PHP itself to preprocess data. 

For example : 

<?php
    $days_en = 'monday,tuesday,wednesday,thursday,friday,saturday,sunday';
    $days_zh = '星期－,星期二,星期三,星期四,星期五,星期六,星期日';

    $days = explode(',', $lang === 'en' ? $days_en : $days_zh); 
?>

could be written 

<?php
    if ($lang === 'en') {
        $days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];
    } else {
        $days = ['星期－', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日'];
    }
?>

and avoid preprocessing the string into an array first. 

Preprocessing could be done anytime the script includes all the needed values to process the expression. 

";
clearphp = "always-preprocess";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";
modifications[] = "Preprocess the values and hardcode them in PHP. Do not use PHP to calculate something at the last moment."
modifications[] = "Use already processed values, or cache to avoid calculating the value each hit."
modifications[] = "Create a class that export the data in the right format for every situation, including the developer's comfort."
[example1]
project="Zurmo"
file="app/protected/core/utils/ZurmoTranslationServerUtil.php"
line="79"
code="join('.', array(MAJOR_VERSION, MINOR_VERSION))	";
explain="It seems that a simple concatenation could be used here. There is another call to this expression in the code, and a third that uses 'PATCH_VERSION' on top of the two others."
[example2]
project="Piwigo"
file="include/random_compat/random.php"
line="34"
code="explode('.', PHP_VERSION);";
explain="PHP_VERSION is actually build with PHP_MAJOR_VERSION, PHP_MINOR_VERSION and PHP_RELEASE_VERSION. There is also a compact version : PHP_VERSION_ID"

