name = "Identical Conditions";
description = "These logical expressions contain members that are identical. 

This means those expressions may be simplified. 

<?php

// twice $a
if ($a || $b || $c || $a) {  }

// Hiding in parenthesis is bad
if (($a) ^ ($a)) {}

// expressions may be large
if ($a === 1 && 1 === $a) {}

?>";
clearphp = "";
severity = "S_CRITICAL";
timetofix = "T_QUICK";
exakatSince = "0.8.4";

modifications[] = "Merge the two structures into one unique test"
modifications[] = "Add extra expressions between the two structures"
modifications[] = "Nest the structures, to show that different attempts are made"


[example1]
project="WordPress"
file="wp-admin/theme-editor.php"
line="247"
code="		<?php if ( ( $has_templates || $theme->parent() ) && $theme->parent() ) : ?>";
explain="The condition checks first if $has_templates or $theme->parent(), and one of the two is sufficient to be valid. Then, it checks again that $theme->parent() is activated with &&. This condition may be reduced by calling $theme->parent(), as $has_template is unused here."
[example2]
project="Dolibarr"
file="htdocs/core/lib/files.lib.php"
line="2052"
code="$modulepart == 'apercusupplier_invoice' || $modulepart == 'apercusupplier_invoice'";
explain="Better check twice that $modulepart is really 'apercusupplier_invoice'."
[example3]
project="Mautic"
file="app/bundles/CoreBundle/Views/Standard/list.html.php"
line="47"
code="!empty($permissions[$permissionBase . ':deleteown']) || !empty($permissions[$permissionBase . ':deleteown']) || !empty($permissions[$permissionBase . ':delete'])";
explain="When the line is long, it tends to be more and more difficult to review the values. Here, one of the two first is too many."
