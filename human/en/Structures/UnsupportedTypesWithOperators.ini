name = "Unsupported Types With Operators";
description = "Arrays, resources and objects are generally not accepted with unary and binary operators. 

The operators are `+`, `-`, `*`, `/`, `**`, `%`, `<<`, `>>`, `&`, `|`, `^`, `~`, `++` and `--`.

<?php

var_dump([] % [42]);
// int(0) in PHP 7.x
// TypeError in PHP 8.0 + 

// Also impossible usage : index are string or int
$a = [];
$b = $c[$a]; 

?>

In PHP 8.0, the rules have been made stricter and more consistent. 

The only valid operator is `+`, combined with arrays in both operands. Other situation will throw `TypeError`.

See also `Stricter type checks for arithmetic/bitwise operators <https://wiki.php.net/rfc/arithmetic_operator_type_checks>`_ and
         `TypeError <https://www.php.net/manual/en/class.typeerror.php>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.1.9";
precision = "P_MEDIUM"

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Do not use those values with those operators"
modifications[] = "Use a condition to skip this awkward situation"
modifications[] = "Add an extra step to turn this value into a valid type"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Unsupported operand types"
phpErrors[] = "Cannot perform bitwise not on array";
phpErrors[] = "Cannot perform bitwise not on bool";
phpErrors[] = "Cannot perform bitwise not on resource";
phpErrors[] = "Cannot perform bitwise not on object";
