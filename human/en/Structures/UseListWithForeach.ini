name = "Use List With Foreach";
description = "Foreach() structures accepts list() as blind key. If the loop-value is an array with a fixed structure, it is possible to extract the values directly into variables with explicit names.

<?php

// Short way to assign variables
// Works on PHP 7.1, where list() accepts keys.
foreach($names as list('first' => $first, 'last' => $last)) {
    doSomething($first, $last);
}

// Short way to assign variables
// Works on all PHP versions with numerically indexed arrays.
foreach($names as list($first, $last)) {
    doSomething($first, $last);
}

// Long way to assign variables
foreach($names as $name) {
    $first = $name['first'];
    $last = $name['last'];
    
    doSomething($first, $last);
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "1.0.4";
precision = "P_VERY_HIGH";

modifications[] = "Use the list keyword (or the short syntax), and simplify the array calls in the loop."

features[] = 'class'

seeAlso[] = "`list <https://www.php.net/manual/en/function.list.php>`_";
seeAlso[] = "`foreach <https://www.php.net/manual/en/control-structures.foreach.php>`_"

phpErrors[] = ""

phpVersion = "";


[example1]
project="MediaWiki"
file="includes/parser/LinkHolderArray.php"
line="372"
code="			foreach ( $entries as $index => $entry ) {
				$pdbk = $entry['pdbk'];
				$title = $entry['title'];
				$query = isset( $entry['query'] ) ? $entry['query'] : [];
				$key = \"$ns:$index\";
				$searchkey = \"<!--LINK'\\" $key-->\";
				$displayText = $entry['text'];
				if ( isset( $entry['selflink'] ) ) {
					$replacePairs[$searchkey] = Linker::makeSelfLinkObj( $title, $displayText, $query );
					continue;
				}
				if ( $displayText === '' ) {
					$displayText = null;
				} else {
					$displayText = new HtmlArmor( $displayText );
				}
				if ( !isset( $colours[$pdbk] ) ) {
					$colours[$pdbk] = 'new';
				}
				$attribs = [];
				if ( $colours[$pdbk] == 'new' ) {
					$linkCache->addBadLinkObj( $title );
					$output->addLink( $title, 0 );
					$link = $linkRenderer->makeBrokenLink(
						$title, $displayText, $attribs, $query
					);
				} else {
					$link = $linkRenderer->makePreloadedLink(
						$title, $displayText, $colours[$pdbk], $attribs, $query
					);
				}

				$replacePairs[$searchkey] = $link;
			}";
explain="This foreach reads each element from $entries into entry. $entry, in turn, is written into $pdbk, $title and $displayText for easier reuse. 5 elements are read from $entry, and they could be set in their respective variable in the foreach() with a list call. The only on that can't be set is 'query' which has to be tested."