name = "Could Use __DIR__";
description = "Use __DIR__ constant to access the current file's parent directory. 

Avoid using dirname() on __FILE__.

<?php

// Better way
$fp = fopen(__DIR__.'/myfile.txt', 'r');

// compatible, but slow way
$fp = fopen(dirname(__FILE__).'/myfile.txt', 'r');

// Since PHP 5.3
assert(dirname(__FILE__) == __DIR__);

?>

__DIR__ has been introduced in PHP 5.3.0.

See also `Magic Constants <https://www.php.net/manual/en/language.constants.predefined.php>`_.

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";

modifications[] = "Use __DIR__ instead of ``dirname(__FILE__);``";

[example1]
project="Woocommerce"
file="includes/class-wc-api.php"
line="162"
code="	private function rest_api_includes() {
		// Exception handler.
		include_once dirname( __FILE__ ) . '/api/class-wc-rest-exception.php';

		// Authentication.
		include_once dirname( __FILE__ ) . '/api/class-wc-rest-authentication.php';

";
explain="All the 120 occurrences use `dirname( __FILE__ )`, and could be upgraded to __DIR__ if backward compatibility to PHP 5.2 is not critical. "
[example2]
project="Piwigo"
file="include/random_compat/random.php"
line="50"
code="    $RandomCompatDIR = dirname(__FILE__);

    require_once $RandomCompatDIR.'/byte_safe_strings.php';
    require_once $RandomCompatDIR.'/cast_to_int.php';
    require_once $RandomCompatDIR.'/error_polyfill.php';
";
explain="`dirname( __FILE__ )` is cached into $RandomCompatDIR, then reused three times. Using __DIR__ would save that detour."
