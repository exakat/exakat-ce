name = "Htmlentities Using Default Flag";
description = "htmlspecialchars(), htmlentities(), htmlspecialchars_decode(), html_entity_decode() and get_html_translation_table(), are used to prevent injecting special characters in HTML code. As a bare minimum, they take a string and encode it for HTML.

The second argument of the functions is the type of protection. The protection may apply to quotes or not, to HTML 4 or 5, etc. It is highly recommended to set it explicitly.

In PHP 8.1, the default value of this parameter has changed. It used to be ``ENT_COMPAT`` and is now ``ENT_QUOTES | ENT_SUBSTITUTE``. The main difference between the different configuration is that the single quote, which was left intact so far, is now protected HTML style.

<?php
$str = 'A quote in <b>bold</b> : \\' and ""';

// PHP 8.0 outputs, without depending on the php.ini: A quote in &lt;b&gt;bold&lt;/b&gt; : ' and &quot;
echo htmlentities($str);

// PHP 8.1 outputs, while depending on the php.ini: A quote in &lt;b&gt;bold&lt;/b&gt; : &#039; and &quot;
echo htmlentities($str);

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.2.3";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = "8.1+"

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
related[] = "Structures/Htmlentitiescalls"

seeAlso[] = "`htmlentities <https://www.php.net/htmlentities>`_"
seeAlso[] = "`htmlspecialchars <https://www.php.net/htmlspecialchars>`_"

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Always use the second argument to explicitly set the desired protection"

features[] = "escape-sequence"
features[] = "html-entity"

features[] = "class"

seeAlso[] = ""

phpErrors[] = ""

changedBehavior = "8.1";
