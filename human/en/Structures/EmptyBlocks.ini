name = "Empty Blocks";
description = "Full empty block, part of a control structures. 

It is recommended to remove those blocks, so as to reduce confusion in the code. 

<?php

foreach($foo as $bar) ; // This block seems erroneous
    $foobar++;

if ($a === $b) {
    doSomething();
} else {
    // Empty block. Remove this
}

// Blocks containing only empty expressions are also detected
for($i = 0; $i < 10; $i++) {
    ;
}

// Although namespaces are not control structures, they are reported here
namespace A;
namespace B;

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";

modifications[] = "Fill the block with a command"
modifications[] = "Fill the block with a comment that explain the situation"
modifications[] = "Remove the block and its commanding operator"

[example1]
project="Cleverstyle"
file="modules/Blogs/api/Controller.php"
line="44"
code="	public static function posts_get ($Request) {
		$id = $Request->route_ids(0);
		if ($id) {
			$post = Posts::instance()->get($id);
			if (!$post) {
				throw new ExitException(404);
			}
			return $post;
		} else {
			// TODO: implement latest posts
		}
	}
";
explain="Else is empty, but commented. "

[example2]
project="PhpIPAM"
file="wp-admin/includes/misc.php"
line="74"
code="/* checks */
if($_POST['action'] == ""delete"") {
	# no cecks
}
else {
	# remove spaces
	$_POST['name'] = trim($_POST['name']);

	# length > 4 and < 12
	if( (mb_strlen($_POST['name']) < 2) || (mb_strlen($_POST['name']) > 24) ) 	{ $errors[] = _('Name must be between 4 and 24 characters'); }


";
explain="The ``then`` block is empty and commented : yet, it may have been clearer to make the condition != and omitted the whole empty block.";
