name = "No isset() With empty()";
description = "empty() actually does the job of isset() too. 

From the manual : ``No warning is generated if the variable does not exist. That means empty() is essentially the concise equivalent to !isset($var) || $var == false.`` The main difference is that isset() only works with variables, while empty() works with other structures, such as constants.

<?php


// Enough validation
if (!empty($a)) {
    doSomething();
}

// Too many tests
if (isset($a) && !empty($a)) {
    doSomething();
}

?>

See also `Isset <http://www.php.net/isset>`_ and 
         `empty <http://www.php.net/empty>`_.
";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.7";
modifications[] = "Only use isset(), just drop the empty()"
modifications[] = "Only use empty(), just drop the empty()"
modifications[] = "Use a null value, so the variable is always set"
[example1]
project="XOOPS"
file="htdocs/class/tree.php"
line="297"
code="isset($this->tree[$key]['child']) && !empty($this->tree[$key]['child']);";
explain="Too much vlaidation"
