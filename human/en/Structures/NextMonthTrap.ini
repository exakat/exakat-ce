name = "Next Month Trap";
description = "Avoid using +1 month with strtotime(). 

strtotime() calculates the next month by incrementing the month number. For day number that do not exist from one month to the next, strtotime() fixes them by setting them in the next-next month. 

This happens to January, March, May, July, August and October. January is also vulnerable for 29 (not every year), 30 and 31. 

To use '+1 month', rely on 'first day of next month' or 'last day of next month' to extract the next month's name. For longer interfaces, start from 'first day of next month'.

<?php

// Base date is October 31 => 10/31
// +1 month adds +1 to 10 => 11/31 
// Since November 31rst doesn't exists, it is corrected to 12/01. 
echo date('F', strtotime('+1 month',mktime(0,0,0,$i,31,2017))).PHP_EOL;

// Base date is October 31 => 10/31
echo date('F', strtotime('first day of next month',mktime(0,0,0,$i,31,2017))).PHP_EOL;

?>

Note that ``Datetime`` and ``DatetimeImmutable`` are also subject to the same trap.

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_INSTANT";
exakatSince = "1.0.1";
precision = "P_HIGH"

seeAlso[] = "`It is the 31st again <https://twitter.com/rasmus/status/925431734128197632>`_"

phpErrors[] = ""

phpVersion = ""

features[] = "date"

modifications[] = "Review strtotime() usage for month additions"
modifications[] = "Base your calculations for the next/previous months on the first day of the month (or any day before the 28th)"
modifications[] = "Avoid using '+n month' with Datetime() after the 28th of any month (sic)"

[example1]
project="Contao"
file="system/modules/calendar/classes/Events.php"
line="515"
code="			case 'past_180':
				return array(strtotime('-6 months'), time(), $GLOBALS['TL_LANG']['MSC']['cal_empty']);
";
explain="This code is wrong on August 29,th 30th and 31rst : 6 months before is caculated here as February 31rst, so march 2. Of course, this depends on the leap years."

[example2]
project="Edusoho"
file="src/AppBundle/Controller/Admin/AnalysisController.php"
line="1426"
code="            'lastMonthStart' => date('Y-m-d', strtotime(date('Y-m', strtotime('-1 month')))),
            'lastMonthEnd' => date('Y-m-d', strtotime(date('Y-m', time())) - 24 * 3600),
            'lastThreeMonthsStart' => date('Y-m-d', strtotime(date('Y-m', strtotime('-2 month')))),
";
explain="The last month is wrong 8 times a year : on 31rst, and by the end of March. ";

