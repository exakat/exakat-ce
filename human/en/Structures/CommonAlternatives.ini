name = "Common Alternatives";
description = "In the following conditional structures, expressions were found that are common to both 'then' and 'else'. It may be interesting, though not always possible, to put them both out of the conditional, and reduce line count. 

<?php
if ($c == 5) {
    $b = strtolower($b[2]); 
    $a++;
} else {
    $b = strtolower($b[2]); 
    $b++;
}
?>

may be rewritten in : 

<?php

$b = strtolower($b[2]); 
if ($c == 5) {
    $a++;
} else {
    $b++;
}

?>

";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.4";

modifications[] = "Collect common expressions, and move them before of after the if/then expression."
modifications[] = "Move a prefix and suffixes to a third-party method"

[example1]
project="Dolibarr"
file="htdocs/admin/facture.php"
line="531"
code="	                            // Active
	                            if (in_array($name, $def))
	                            {
	                            	print '<td class=\"center\">'.\"\n\";
	                            	print '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=del&value='.$name.'\">';
	                            	print img_picto($langs->trans(\"Enabled\"), 'switch_on');
	                            	print '</a>';
	                            	print '</td>';
	                            }
	                            else
	                            {
	                                print '<td class="center\">'.\"\n\";
	                                print '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=set&value='.$name.'&scan_dir='.$module->scandir.'&label='.urlencode($module->name).'\">'.img_picto($langs->trans(\"SetAsDefault\"), 'switch_off').'</a>';
	                                print \"</td>\";
	                            }
";
explain="The opening an closing tag couldd be moved outside the if condition : they are compulsory in both cases."

[example2]
project="NextCloud"
file="apps/encryption/lib/KeyManager.php"
line="436"
code="		if ($this->util->isMasterKeyEnabled()) {
			$uid = $this->getMasterKeyId();
			$shareKey = $this->getShareKey($path, $uid);
			if ($publicAccess) {
				$privateKey = $this->getSystemPrivateKey($uid);
				$privateKey = $this->crypt->decryptPrivateKey($privateKey, $this->getMasterKeyPassword(), $uid);
			} else {
				// when logged in, the master key is already decrypted in the session
				$privateKey = $this->session->getPrivateKey();
			}
		} else if ($publicAccess) {
			// use public share key for public links
			$uid = $this->getPublicShareKeyId();
			$shareKey = $this->getShareKey($path, $uid);
			$privateKey = $this->keyStorage->getSystemUserKey($this->publicShareKeyId . '.privateKey', Encryption::ID);
			$privateKey = $this->crypt->decryptPrivateKey($privateKey);
		} else {
			$shareKey = $this->getShareKey($path, $uid);
			$privateKey = $this->session->getPrivateKey();
		}
";
explain="`$shareKey = $this->getShareKey($path, $uid);` is common to all three alternatives. In fact, `$uid = $this->getPublicShareKeyId();` is not common, and that shoul de reviewed, as `$uid` will be undefined. "

