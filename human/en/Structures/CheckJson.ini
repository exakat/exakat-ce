name = "Check JSON";
description = "Check errors whenever JSON is encoded or decoded. 

In particular, ``NULL`` is a valid decoded JSON response. If you want to avoid mistaking NULL for an error, it is recommended to call ``json_last_error``.";
code = "<?php

$encoded = json_encode($incoming);
// Unless JSON must contains some non-null data, this mistakes NULL and error
if(json_last_error() != JSON_ERROR_NONE) {
    die('Error when encoding JSON');
}

$decoded = json_decode($incoming);
// Unless JSON must contains some non-null data, this mistakes NULL and error
if($decoded === null) {
    die('ERROR');
}

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.3.0";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Always check after JSON operation : encoding or decoding.";
modifications[] = "Add a call to json_last_error()";
modifications[] = "Configure operations to throw an exception upon error (``JSON_THROW_ON_ERROR``), and catch it.";
; Alternative to make this code go away. 
; One by possible solution

features[] = "json";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Option to make json_encode and json_decode throw exceptions on errors <https://ayesh.me/Upgrade-PHP-7.3#json-exceptions>`_";
seeAlso[] = "`json_last_error <https://www.php.net/json_last_error>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

[example1]
project = "Woocommerce";
file = "includes/admin/helper/class-wc-helper-plugin-info.php";
line = "66";
code = "		$results = json_decode( wp_remote_retrieve_body( $request ), true );
		if ( ! empty( $results ) ) {
			$response = (object) $results;
		}

		return $response;
";
explain = "In case the body is an empty string, this will be correctly decoded, but will yield an object with an empty-named property.";
