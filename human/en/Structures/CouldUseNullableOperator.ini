name = "Could Use Nullable Object Operator";
description = "When the previous call may end up as null, the null-safe object operator will prevent fatal errors. 

<?php

// direct, uncertain usage
foo()->b();

$a = foo();
$c = $a ? $a->b() : null;

function foo() : ?A {
    return new A();
}

class A {
    function b() : string { return '';}
}

?>
";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.3";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_MEDIUM";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = "8.0+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "`PHP 8.0 feature focus: nullsafe methods <https://platform.sh/blog/2020/php-80-feature-focus-type-nullsafe-methods/>`_";
seeAlso[] = "`Nullsafe methods and properties <https://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.nullsafe>`_";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "nullsafe-object-operator";
features[] = "nullable";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Add a test before using the return value"
modifications[] = "Update the previous method to prevent it from returning null"
modifications[] = "Use the null-safe object operator"


; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Call to a member function b() on null"
phpErrors[] = "Attempt to read property \"b\" on null"
phpErrors[] = "Class \"null\" not found "

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""

; Optional parameters
; Duplicate and increment numbers to add more : parameter1, paramter2, etc. 
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";

; Information for the ruleset Builder (https://www.exakat.io/en/ruleset_builder)
;rulesetBuild_title="Wrong Type Returned"
;rulesetBuild_code = "function foo() : string {
