name = "Use Recursive count()";
description = "The native count() function is recursive: it can count all the elements inside multi-dimensional arrays. 

The second argument of count, when set to ``COUNT_RECURSIVE``, count recursively the elements. 

Recursive count() counts all the elements, includeing the recusrive elements themselves. For a 2 dimensional array, this means removing the normal count of elements from the list. For higher dimensions, removing the recursive elememnts requires better filtering.";
code = "<?php

$array = array( array(1,2,3), array(4,5,6));

print (count($array, COUNT_RECURSIVE) - count($array, COUNT_NORMAL));

$count = 0;
foreach($array as $a) {
    $count += count($a);
}
print $count;

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_SLOW";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.1.7";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Drop the loop and use the 2nd argument of count()";
; Alternative to make this code go away. 
; One by possible solution

features[] = "";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`count <https://www.php.net/count>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "WordPress";
file = "wp-admin/includes/misc.php";
line = "74";
code = "$markerdata = explode( "\n", implode( '', file( $filename ) ) );";
explain = "This code actually loads the file, join it, then split it again. file() would be sufficient. ";

[example2]
project = "PrestaShop";
file = "controllers/admin/AdminSearchController.php";
line = "342";
code = "            $nb_results = 0;
            foreach ($this->_list as $list) {
                if ($list != false) {
                    $nb_results += count($list);
                }
            }
";
explain = "This could be improved with count() recursive and a array_filter call, to remove empty $list.";
