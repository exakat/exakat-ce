name = "Overwritten Foreach Var";
description = "When using standard blind variable names, nested foreach may lead to overwriting the variables.

Careful coding may take advantage of that feature. Though, it tends to be error prone, and will generate bugs if the code is refactored.

<?php

foreach($array as $key => $value) {
    foreach($array as $key2 => $value) {
        // $value is now the one of the 2nd foreach, not the first.
        
    }
}

?>

";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.3.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_VERY_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;php_deprecation = "7.4";

seeAlso[] = ""

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "foreach";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Change the name of one of the blind variable to use a distinct name"
modifications[] = "Remove usage of one of the double variable"
modifications[] = "Remove the nested foreach()"
modifications[] = "Move the nested foreach() to a method"


; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""
