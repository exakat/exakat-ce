name = "Not Equal Is Not !==";
description = "Not and Equal operators, used separately, don't amount to the different operator ``!==``.

``!$a == $b`` first turns ``$a``into the opposite boolean, then compares this boolean value to ``$b``. On the other hand, ``$a !== $b`` compares the two variables for type and value, and returns a boolean. 

<?php

if ($string != 'abc') {
    // doSomething()
}

// Here, string will be an boolean, leading 
if (!$string == 'abc') {
    // doSomething()
}

// operator priority may be confusing
if (!$object instanceof OneClass) {
    // doSomething()
}
?>

Note that the ``instanceof`` operator may be use with this syntax, due to operator precedence.

See also `Operator Precedence <https://www.php.net/manual/en/language.operators.precedence.php>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.0.6";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use the != or !=="
modifications[] = "Use parenthesis"

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""

; Optional parameters
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";

