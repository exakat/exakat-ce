name = "Useless Null Coalesce";
description = "When the type system ensure the condition is never null, the operator becomes useless. 

This is particularly true for properties (static or not) and returntype of methods and functions. And, to a lesser extend, to variables and parameters.

<?php

function foo(A $a, ?B $b) {
    // $a is never null, so this is OK
    $a ?? 'a';
    
    // $b might be null, so this is OK
    $b ?? 'b';
}

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.0";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = "7.0+"

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "`Null coalescing operator <https://www.php.net/manual/en/migration70.new-features.php#migration70.new-features.null-coalesce-op>`_";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "coalesce";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the ?? operator"
modifications[] = "Switch to a ?: operator"
modifications[] = "Updated the properties to accept NULL as a possible type"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""
