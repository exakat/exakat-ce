name = "No Parenthesis For Language Construct";
description = "Some PHP language constructs, such are ``include``, ``require``, ``include_once``, ``require_once``, ``print``, ``echo`` don't need parenthesis. They accept parenthesis, but it is may lead to strange situations. 
It it better to avoid using parenthesis with ``echo``, ``print``, ``return``, ``throw``, ``yield``, ``yield from``, ``include``, ``require``, ``include_once``, ``require_once``.";
code = "<?php

// This is an attempt to load 'foo.inc', or kill the script
include('foo.inc') or die();
// in fact, this is read by PHP as : include 1 
// include  'foo.inc' or die();

?>";
clearphp = "no-parenthesis-for-language-construct";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Remove parenthesis";
; Alternative to make this code go away. 
; One by possible solution

features[] = "parenthesis";
features[] = "language-construct";
features[] = "return";
features[] = "include";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`ON PHP LANGUAGE CONSTRUCTS AND PARENTHESES <https://tfrommen.de/on-php-language-constructs-and-parentheses/>`_";
seeAlso[] = " `include <https://www.php.net/manual/en/function.include.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Phpdocumentor";
file = "src/Application/Renderer/Router/StandardRouter.php";
line = "55";
code = "        $this[] = new Rule(function ($node) { return ($node instanceof NamespaceDescriptor); }, $namespaceGenerator);";
explain = "No need for parenthesis with require(). instanceof has a higher precedence than return anyway. ";

[example2]
project = "phpMyAdmin";
file = "db_datadict.php";
line = "170";
code = "echo (($row['Null'] == 'NO') ? __('No') : __('Yes'))";
explain = "Not only echo() doesn't use any parenthesis, but this syntax gives the illusion that echo() only accepts one argument, while it actually accepts an arbitrary number of argument.";
