name = "Switch To Switch";
description = "The following structures are based on if / elseif / else. Since they have more than three conditions (not withstanding the final else), it is recommended to use the switch structure, so as to make this more readable.

On the other hand, switch() structures with less than 3 elements should be expressed as a if / else structure.

Note that if condition that uses strict typing (=== or !==) can't be converted to switch() as the latter only performs == or != comparisons.

<?php

if ($a == 1) {

} elseif ($a == 2) {

} elseif ($a == 3) {

} elseif ($a == 4) {

} else {

}

// Better way to write long if/else lists
switch ($a) {
    case 1 : 
        doSomething(1);
        break 1;
    
    case 2 : 
        doSomething(2);
        break 1;

    case 3 : 
        doSomething(3);
        break 1;

    case 4 : 
        doSomething(4);
        break 1;
    
    default :
        doSomething();
        break 1;
}

?>

Note that simple switch statement, which compare a variable to a literal are optimised in PHP 7.2 and more recent. This gives a nice performance boost, and keep code readable.

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision = "P_HIGH"

seeAlso[] = "`PHP 7.2's switch optimisations <https://derickrethans.nl/php7.2-switch.html>`_"
seeAlso[] = "`Is Your Code Readable By Humans? Cognitive Complexity Tells You <https://www.tomasvotruba.cz/blog/2018/05/21/is-your-code-readable-by-humans-cognitive-complexity-tells-you/>`_"

phpErrors[] = ""

features[] = "switch"
features[] = "match"

modifications[] = "Use a switch statement, rather than a long string of if/else"
modifications[] = "Use a match() statement, rather than a long string of if/else (PHP 8.0 +)"

phpVersion = ""

[example1]
project="Thelia"
file="core/lib/Thelia/Controller/Admin/TranslationsController.php"
line="100"
code="if($modulePart == 'core') { /**/ } elseif($modulePart == 'admin-includes') { /**/ } elseif(!empty($modulePart)) { /**/ }";
explain="The two first comparison may be turned into a case, and the last one could be default, or default with a check on empty(). "

[example2]
project="XOOPS"
file="htdocs/search.php"
line="74"
code="if($action === 'results') { /**/ } elseif($action === 'showall') { /**/ } elseif($action === 'showallbyuser') { /**/ } ";
explain="Here, converting this structure to switch requires to drop the === usage. Also, no default usage here. "
