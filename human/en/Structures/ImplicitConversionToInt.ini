name = "Implicit Conversion To Int";
description = "PHP warns when a value is implicitely converted from float to int. This usually leads to a loss of precision and unexpected values.

The conversion happens in various situations in PHP lifecycle (extracted from the wiki article): 

+ Bitwise OR operator |
+ Bitwise AND operator &
+ Bitwise XOR operator ^
+ Shift right and left operators
+ Modulo operator
+ The combined assignment operators of the above operators
+ Assignment to a typed property of type int in coercive typing mode
+ Argument for a parameter of type int for both internal and custom functions in coercive typing mode
+ Returning such a value for custom functions declared with a return type of int in coercive typing mode
+ Bitwise NOT operator ~
+ As an array key



This features is applied to PHP 8.1 and later, yet it is also applicable to older versions of PHP.";
code = "<?php

function foo(int $i) {}

//Implicit conversion from float 1.2 to int loses precision
foo(1.2);

?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.2";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Add an explicit cast `(int)` operator";
; Alternative to make this code go away. 
; One by possible solution

features[] = "type-juggling";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`PHP RFC: Deprecate implicit non-integer-compatible float to int conversions <https://wiki.php.net/rfc/implicit-float-int-deprecate>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "Implicit conversion from float 1.2 to int loses precision";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary
