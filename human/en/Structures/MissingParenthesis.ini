name = "Missing Parenthesis";
description = "Adding parenthesis to addition expressions make them more readable and to prevent bugs. 

In the expressions below, the code is legit, although it is prone to misunderstanding.";
code = "<?php

// Missing some parenthesis!!
if (!$a instanceof Stdclass) {
    print \"Not\n\";
} else {
    print \"Is\n\";
}

// Could this addition be actually,
$c = -$a + $b;

// this one ? 
$c = -($a + $b);

// or this one ? 
$c = $b - $a;

?>";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_INSTANT";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.2.6";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Use parenthesis to show intent in the addition expression";
; Alternative to make this code go away. 
; One by possible solution

features[] = "parenthesis";
features[] = "readability";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "`Operators Precedence <https://www.php.net/manual/en/language.operators.precedence.php>`_";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";

