name = "Could Use str_repeat()";
description = "Use str_repeat() or str_pad() instead of making a loop.

Making a loop to repeat the same concatenation is actually much longer than using str_repeat(). As soon as the loop repeats more than twice, str_repeat() is much faster. With arrays of 30, the difference is significant, though the whole operation is short by itself. 

<?php

// This adds 7 'e' to $x
$x .= str_repeat('e', 7);

// This is the same as above, 
for($a = 3; $a < 10; ++$a) {
    $x .= 'e';
}

// here, $default must contains 7 elements to be equivalent to the previous code
foreach($default as $c) {
    $x .= 'e';
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_SLOW";
exakatSince = "0.11.0";
precision = "P_VERY_HIGH"
modifications[] = "Use strrepeat() whenever possible"

[example1]
project="Zencart"
file="includes/functions/functions_general.php"
line="1234"
code="    if ( (!zen_browser_detect('MSIE')) && (zen_browser_detect('Mozilla/4')) ) {
      for ($i=0; $i<45; $i++) $pre .= '&nbsp;';
    }
";
explain="That's a 45 repeat of &nbsp;"
