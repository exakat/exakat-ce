name = "openssl_random_pseudo_byte() Second Argument";
description = "openssl_random_pseudo_byte() uses exceptions to signal an error. Since PHP 7.4, there is no need to use the second argument.

On the other hand, it is important to catch the exception that openssl_random_pseudo_byte() may emit.

<?php
    // PHP 7.4 way to check on random number generation
    try {
        $bytes = openssl_random_pseudo_bytes($i);
    } catch(\Exception $e) {
        die("Error while loading random number");
    }

    // Old way to check on random number generation
    $bytes = openssl_random_pseudo_bytes($i, $cstrong);
    if ($cstrong === false) {
        die("Error while loading random number");
    }
?>

See also `openssl_random_pseudo_byte <https://www.php.net/openssl_random_pseudo_bytes>`_ and 
         `PHP RFC: Improve openssl_random_pseudo_bytes() <https://wiki.php.net/rfc/improve-openssl-random-pseudo-bytes>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.9.3";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Skip the second argument, add a try/catch around the call to openssl_random_pseudo_bytes()"

; A PHP error that may be emitted by the target faulty code
;phpErrors[] = ""
