name = "Mbstring Unknown Encodings";
description = "mbstring functions require one of its supported encoding as parameter. 

For example, mb_chr() requires encoding as second parameter. The supported encodings are available with mb_list_encodings() and mb_encoding_aliases().

A wrong encoding generates a fatal error.

<?php

	print mb_chr(128024, 'UTF-8')); // emoji of an elephant

	//Argument #2 ($encoding) must be a valid encoding, "elephpant" given 
	print mb_chr($value, 'elephpant')); 
}
?>

Here are some of the dropped encodings, depending on PHP versions: 

+ PHP 7.0
  	+ auto
+ PHP 8.0
  	+ pass
+ PHP 8.1
    + wchar
    + byte2be
    + byte2le
    + byte4be
    + byte4le
    + jis-ms
    + cp50220raw
+ PHP 8.2
  	+ qprint
  	+ base64
  	+ uuencode
  	+ html-entities
";
clearphp = "";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.0";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "mbstring";
features[] = "encoding";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Use a valid encoding for the PHP version."

; A PHP error that may be emitted by the target faulty code
phpErrors[] = "Argument #2 ($encoding) must be a valid encoding, \"xxx\" given"

; Human readable keywords for manual glossary
;keywords[] = ""
