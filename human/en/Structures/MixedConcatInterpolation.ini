name = "Mixed Concat And Interpolation";
description = "Mixed usage of concatenation and string interpolation is error prone. It is harder to read, and leads to overlooking the concatenation or the interpolation.

<?php

// Concatenation string
$a = $b . 'c' . $d;

// Interpolation strings
$a = "{$b}c{$d}";   // regular form
$a = "{$b}c$d";     // irregular form

// Mixed Concatenation and Interpolation string
$a = "{$b}c" . $d;
$a = $b . "c$d";
$a = $b . "c{$d}";

// Mixed Concatenation and Interpolation string with constant
$a = "{$b}c" . CONSTANT;

?>

Fixing this issue has no impact on the output. It makes code less error prone.

There are some situations where using concatenation are compulsory : when using a constant, calling a function, running a complex expression or make use of the escape sequence. You may also consider pushing the storing of such expression in a local variable.

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.11.5";

modifications[] = "Only use one type of variable usage : either interpolation, or concatenation";

[example1]
project="SuiteCrm"
file="modules/AOW_Actions/actions/actionSendEmail.php"
line="89"
code="\"<input type='checkbox' id='aow_actions_param[\" . $line . \"][individual_email]' name='aow_actions_param[\" . $line . \"][individual_email]' value='1' $checked></td>\"";
explain="How long did it take to spot the hidden $checked variable in this long concatenation ? Using a consistent method of interpolation would help readability here."
[example2]
project="Edusoho"
file="src/AppBundle/Controller/Admin/SiteSettingController.php"
line="168"
code="\"{$this->container->getParameter('topxia.upload.public_url_path')}/\" . $parsed['path']";
explain="Calling a method from a property of an object is possible inside a string, though it is rare. Setting the method outside the string make it more readable."
