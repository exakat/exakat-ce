name = "PHP7 Dirname";
description = "dirname() has a second argument that represents the number of parent folder to follow. This prevent us from using nested dirname() calls to reach an grand-parent direct.

<?php
$path = '/a/b/c/d/e/f';

// PHP 7 syntax
$threeFoldersUp = dirname($path, 3);

// PHP 5 syntax
$threeFoldersUp = dirname(dirname(dirname($path)));

// long path, with backtracking
$path = __DIR__.'/../../../abc';

// short path, with direct access
$path = dirname(__DIR__, 3).'/abc';

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";
precision = "P_HIGH";

seeAlso[] = "`dirname <https://www.php.net/dirname>`_";

modifications[] = "Use dirname()'s second argument"

phpVersion = "7.0+"

features[] = ''

seeAlso[] = ""

phpErrors[] = ""


[example1]
project="OpenConf"
file="include.php"
line="61"
code="$OC_basepath = dirname(dirname($_SERVER['PHP_SELF']));";
explain="Since PHP 7.0, dirname( , 2); does the job."
[example2]
project="MediaWiki"
file="includes/installer/Installer.php"
line="1173"
code="	protected function envPrepPath() {
		global $IP;
		$IP = dirname( dirname( __DIR__ ) );
		$this->setVar( 'IP', $IP );
	}
";
explain="Since PHP 7.0, dirname( , 2); does the job."
