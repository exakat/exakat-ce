name = "Exit() Usage";
description = "Using exit or die() in the code makes the code untestable (it will break unit tests). Moreover, if there is no reason or string to display, it may take a long time to spot where the application is stuck. 
Try exiting the function/class with return, or throw exception that may be caught later in the code.";
code = "<?php

// Throw an exception, that may be caught somewhere
throw new Exception('error');

// Dying with error message. 
die('error');

function foo() {
    //exiting the function but not dying
    if (somethingWrong()) {
        return true;
    }
}
?>";
clearphp = "no-exit";
severity = "S_MAJOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "0.8.4";
precision = "P_VERY_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Avoid exit and die. Let the script finish.";
modifications[] = "Throw an exception and let it be handled before finishing";
; Alternative to make this code go away. 
; One by possible solution

features[] = "exit";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "";
; Human readable keywords for manual glossary

changedBehavior = "";
; Which version did that behavior changed
changedBehavior_details = "";


[example1]
project = "Traq";
file = "src/Controllers/attachments.php";
line = "75";
code = "    /**
     * View attachment page
     *
     * @param integer $attachment_id
     */
    public function action_view($attachment_id)
    {
        // Don't try to load a view
        $this->render['view'] = false;

        header("Content-type: {$this->attachment->type}");
        $content_type = explode('/', $this->attachment->type);

        // Check what type of file we're dealing with.
        if($content_type[0] == 'text' or $content_type[0] == 'image') {
            // If the mime-type is text, we can just display it
            // as plain text. I hate having to download files.
            if ($content_type[0] == 'text') {
                header("Content-type: text/plain");
            }
            header(\"Content-Disposition: filename=\\\"{$this->attachment->name}\\\"\");
        }
        // Anything else should be downloaded
        else {
            header(\"Content-Disposition: attachment; filename=\\\"{$this->attachment->name}\\\"\");
        }

        // Decode the contents and display it
        print(base64_decode($this->attachment->contents));
        exit;
    }
";
explain = "This acts as a view. The final 'exit' is meant to ensure that no other piece of data is emitted, potentially polluting the view. This also prevent any code cleaning to happen.";

[example2]
project = "ThinkPHP";
file = "ThinkPHP/Library/Vendor/EaseTemplate/template.core.php";
line = "60";
code = "		$this->version		= (trim($_GET['EaseTemplateVer']))?die('Ease Templae E3!'):'';";
explain = "Here, exit is used as a rudimentary error management. When the version is not correctly provided via EaseTemplateVer, the application stop totally.";
