name = "Exit() Usage";
description = "Using exit or die() in the code makes the code untestable (it will break unit tests). Moreover, if there is no reason or string to display, it may take a long time to spot where the application is stuck. 

<?php

// Throw an exception, that may be caught somewhere
throw new \Exception('error');

// Dying with error message. 
die('error');

function foo() {
    //exiting the function but not dying
    if (somethingWrong()) {
        return true;
    }
}
?>

Try exiting the function/class with return, or throw exception that may be caught later in the code.
";
clearphp = "no-exit";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";

precision = 'P_VERY_HIGH'

modifications[] = "Avoid exit and die. Let the script finish.";
modifications[] = "Throw an exception and let it be handled before finishing";

features[] = 'exit'

seeAlso[] = ""

phpErrors[] = ""

phpVersion = "";


[example1]
project="Traq"
file="src/Controllers/attachments.php"
line="75"
code="    /**
     * View attachment page
     *
     * @param integer $attachment_id
     */
    public function action_view($attachment_id)
    {
        // Don't try to load a view
        $this->render['view'] = false;

        header("Content-type: {$this->attachment->type}");
        $content_type = explode('/', $this->attachment->type);

        // Check what type of file we're dealing with.
        if($content_type[0] == 'text' or $content_type[0] == 'image') {
            // If the mime-type is text, we can just display it
            // as plain text. I hate having to download files.
            if ($content_type[0] == 'text') {
                header("Content-type: text/plain");
            }
            header(\"Content-Disposition: filename=\\"{$this->attachment->name}\\"\");
        }
        // Anything else should be downloaded
        else {
            header(\"Content-Disposition: attachment; filename=\\"{$this->attachment->name}\\"\");
        }

        // Decode the contents and display it
        print(base64_decode($this->attachment->contents));
        exit;
    }
";
explain="This acts as a view. The final 'exit' is meant to ensure that no other piece of data is emitted, potentially polluting the view. This also prevent any code cleaning to happen."

[example2]
project="ThinkPHP"
file="ThinkPHP/Library/Vendor/EaseTemplate/template.core.php"
line="60"
code="		$this->version		= (trim($_GET['EaseTemplateVer']))?die('Ease Templae E3!'):'';";
explain="Here, exit is used as a rudimentary error management. When the version is not correctly provided via EaseTemplateVer, the application stop totally."
