name = "Double Checks";
description = "Double checks happen when data is checked at one point, and then, checked again, with the same test, in a following call.

Some of the testing may be pushed to the type system, for example is_int() and ``int`` type. Others can't, as the check is not integrated in the type system, such as is_readable() and ``string``, for a path. 

The check may be removed from the method, when the method is not called elsewhere without protection. 

<?php

if (is_writeable($path)) {
	foo($path);
}

function foo(string $path) {
	// This was already tested
	if (!is_writeable($path)) {
		return;
	}
}

?>

Cleaning such structure leads to micro-optimisation. 

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.5.2";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
precision = "P_HIGH";
;Versions of PHP where this rule is applicable. 
;8.0+, 7.4-...
phpVersion = ""

; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.
;phpDeprecation = "7.4";

; List of links of interest
seeAlso[] = "";

; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features
features[] = "";

; Possible other rules that might be related to this one. 
; Use 'Folder/Name' format, one each
; related[] = ""

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Remove the check in the method"
modifications[] = "Remove the check in the caller code"
modifications[] = "Use type system"

; A PHP error that may be emitted by the target faulty code
phpErrors[] = ""

; Human readable keywords for manual glossary
;keywords[] = ""

; manual index for Sphinx index building
;index[] = ""
