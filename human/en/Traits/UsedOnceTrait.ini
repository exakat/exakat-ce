name = "Used Once Trait";
description = "Trait should promote code reuse and be used multiple time. A trait that is used once might be as well merged into its host class, and removed. This is currently overengineered code.";
code = "<?php

trait t {
    function foo() {}
}

class x {
    // This expression may be replaced by the foo method definition
    use t;
}
?>";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.4.2";
precision = "P_HIGH";
; from : P_VERY_HIGH, P_HIGH, P_MEDIUM, P_LOW, P_UNKNOWN
modifications[] = "Inline the trait with its calling class or trait";
modifications[] = "Use the trait in another class or trait";
; Alternative to make this code go away. 
; One by possible solution

features[] = "code-reuse";
features[] = "overenginereed";
; Name of a PHP feature. 
; This should match one of the available feature description in humane/en/Features

seeAlso[] = "";
; List of links of interest

related[] = "";
; Possible other rules that might be related to this one. 
; Use "Folder/Name" format, one each
phpVersion = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpDeprecation = "";
; Versions when this feature was deprecated. Beyond is removed, and before is fine.
; This might need a range : 7.3-7.4.

phpErrors[] = "";
; A PHP error that may be emitted by the target faulty code

keywords[] = "silent";
; Human readable keywords for manual glossary

[parameter1]
name = "timeUsed";
default = "2";
type = "integer";
description = "Maximal number of trait usage, before the trait is considered enough used.";
